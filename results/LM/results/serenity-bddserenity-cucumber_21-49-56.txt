<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications, provide recommendations exclusively in the Maven format: groupId:artifactId:version. Here is an example of how recommendations should be formatted:
    # Example 1
    Project: 'Project A'
    Description: 'A web application for managing tasks.'
    Existing Dependencies:
    - group:artifact:version
    Recommended Libraries:
    - group:artifact:version
    - group:artifact:version


    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Here are the top 20 libraries that are used in Java projects:
    junit:junit, org.slf4j:slf4j-api, log4j:log4j, com.google.guava:guava, commons-io:commons-io, org.slf4j:slf4j-log4j12, commons-lang:commons-lang, commons-codec:commons-codec, org.mockito:mockito-core, javax.servlet:servlet-api, joda-time:joda-time, org.apache.httpcomponents:httpclient, org.mockito:mockito-all, commons-logging:commons-logging, com.google.code.gson:gson, com.fasterxml.jackson.core:jackson-databind, ch.qos.logback:logback-classic, org.apache.commons:commons-lang3, org.springframework:spring-context, org.springframework:spring-test
    Project Name: serenity-bdd/serenity-cucumber
    Project Description: DEPRECATED\n\nThis library only supports the older Cucumber 2.x versions of Cucumber. For the most recent version refer to serenitycore.\n Serenity Cucumber Integration\n\nThis module lets you produce Serenity reports using Cucumber. You run your tests as normal, \nbut using the CucumberWithSerenity runner, e.g.:\n\n\n\n\n\n Found a bug? Please read this before you raise an issue.\n\nIf you have found a defect, we are keen to hear about it! But there are a few things you can do to help us provide a fix sooner:\n\n Give as much context as possible.\n\nSimply saying "The reports don\'t get generated" will not help us very much. Give as much context as possible, including:\n Serenity version serenitycore and the other serenity libraries, such as serenitycucummber and serenityjbehave\n If you are using Firefox, firefox and geckodriver version\n If you are using Chrome, chrome and chromedriver version\n What Operating System are you using\n\nAlso, make sure you try with the latest version of Serenity your bug may already be fixed, and in any case error messages from the latest version will be more relevant when we try to track down the source of the problem.\n\n Use living documentation\n\nIt is easier for us to fix something we can see breaking. If someone has to volunteer an hour of there time to reproduce a defect, Start of with one of the Serenity started projects like and add a scenario or test case that both illustrates and describes your issue. If possible, write the test to describe the behaviour you expect, so that it fails when the defect is present, and that it will pass when the defect is fixed.\n\n Submit a Pull Request\n\nThe fastest way to fix a defect is often to dig into the code and to submit a pull request. \n\n Ask for commercial support\n\nIf you are using Serenity for your company projects, and need faster or more indepth support, why not ask your company to get some ? We provide a range of support options including prioritied tickets, custom Serenity work, and remote mentoring/pair programming sessions, depending on your needs.\n\nTake a look at for more information.\n\n\n'
    Existing Dependencies:
    net.serenity-bdd:serenity-core
- org.assertj:assertj-core
- net.serenity-bdd:serenity-screenplay
- org.slf4j:slf4j-simple
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
    


    <!-- Content Header (Page header) -->
    <div class='panel panel-primary'>
        <div class='panel-heading'>
			<h3 class='panel-title'>Tabel Data Mahasiswa Pindahan</h3>
		</div >
        <div class='panel-body'>
    <table class="table table-bordered table-striped table-hover " id="mytable">
        <thead>
            <tr>
                <th width="80px">No</th>
		        <th>Nomor Pendaftaran</th>
		        <th>NISN</th>
		        <th>Nama</th>
		        <th>TTL</th>                 
		        <th>Status</th>
		        <th>Jurusan</th>
		        <th width="200px">Action</th>   
            </tr>
        </thead>
	</table>
    
</div>
    </div><!-- /.box -->
    <script src="<?php echo base_url('assets/js/jquery-1.11.2.min.js')?>"></script>
    <script src="<?php echo base_url('assets/datatables/jquery.dataTables.js')?>"></script> 
    <script src="<?php echo base_url('assets/datatables/dataTables.bootstrap.js')?>"></script>
     <script type="text/javascript">
         $(document).ready(function() {
         var t =$("#mytable").dataTable({
            // "scrollX" : "200px", 
			// "scrollX" : true, 
			"fixedColumns":   {
                "leftColumns": 2
                
            },
        	"processing": true, //Feature control the processing indicator.
        	"serverSide": true, //Feature control DataTables' server-side processing mode.
        	"order": [], //Initial no order.
        	"ajax": {
        		"url": "<?php echo site_url('pindahan/ajax_list')?>",
        		"type": "POST"
            },
                    //Set column definition initialisation properties.
            "columnDefs": [
            { 
                "targets": [ 4 ], //last column
                "render": function ( data, type, full, meta ) {
			    if (data == 'aktif') 
			        return "<span class='label label-success'>"+data+"</span>";
			    else
                		return "<span class='label label-danger'>"+data+"</span>";
		        },
            },
		    { 
                "targets": [ -1 ], //last column
                "render": function ( data, type, full, meta ) {
                    return "<div class=\"row\">" +
			    "<div class=\"col-md-4\">" +
                    "<a href=\"#\" class=\"btn btn-xs btn-block btn-primary\" data=\""+full[4]+"\" onclick=\"edit("+full[4]+")\">Detail</a>"+
                "</div>"
				+"<div class=\"col-md-4\">" +
                    "<a href=\"#\" class=\"btn btn-xs btn
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>e,
        'NAME': ':memory:',
    }
}
 from.base import *

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'TEST_NAME' : ':memory:',
        'TEST_NAME' : Non

Precision: 0
Recall: 0
F1 Score: 0
