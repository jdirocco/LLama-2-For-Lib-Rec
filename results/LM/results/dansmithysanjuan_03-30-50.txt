<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications, provide recommendations exclusively in the Maven format: groupId:artifactId:version. Here is an example of how recommendations should be formatted:
    # Example 1
    Project: 'Project A'
    Description: 'A web application for managing tasks.'
    Existing Dependencies:
    - group:artifact:version
    Recommended Libraries:
    - group:artifact:version
    - group:artifact:version


    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Here are the top 20 libraries that are used in Java projects:
    junit:junit, org.slf4j:slf4j-api, log4j:log4j, com.google.guava:guava, commons-io:commons-io, org.slf4j:slf4j-log4j12, commons-lang:commons-lang, commons-codec:commons-codec, org.mockito:mockito-core, javax.servlet:servlet-api, joda-time:joda-time, org.apache.httpcomponents:httpclient, org.mockito:mockito-all, commons-logging:commons-logging, com.google.code.gson:gson, com.fasterxml.jackson.core:jackson-databind, ch.qos.logback:logback-classic, org.apache.commons:commons-lang3, org.springframework:spring-context, org.springframework:spring-test
    Project Name: dansmithy/sanjuan
    Project Description: Attempt at making an online version of the strategy card game, San Juan.\n'
    Existing Dependencies:
    com.github.rest-driver:rest-client-driver
- org.jboss.resteasy:resteasy-jaxb-provider
- org.codehaus.jackson:jackson-xc
- commons-io:commons-io
- org.slf4j:slf4j-simple
- org.codehaus.jackson:jackson-jaxrs
- org.slf4j:slf4j-api
- org.springframework.security:spring-security-core
- org.mockito:mockito-all
- org.hamcrest:hamcrest-core
- com.github.rest-driver:rest-server-driver
- org.aspectj:aspectjweaver
- commons-lang:commons-lang
- junit:junit-dep
- org.jboss.resteasy:resteasy-jaxrs
- org.jboss.resteasy:resteasy-spring
- org.springframework:spring-webmvc
- net.sf.json-lib:json-lib
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 19 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
     <div class="page-breadcrumb">
                <div class="row">
                    <div class="col-5 align-self-center">                        
                        <h4 class="page-title">Dashboard</h4>
                    </div>
                    <div class="col-7 align-self-center">
                        <div class="d-flex align-items-center justify-content-end">
                            <nav aria-label="breadcrumb">
                                <ol class="breadcrumb">
                                    <li class="breadcrumb-item">
                                        <a href="<?php echo base_url()."Admin/admin_dashboard";?>">Home</a>
                                    </li>
                                    <li class="breadcrumb-item active" aria-current="page">Dashboard</li>
                                </ol>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container-fluid">
            <div class="row">
                    <div class="col-sm col-lg-3">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex align-items-start">
                                    <h4 class="card-title mb-2 flex-grow-1">Staff List</h4>
                                    <div class="dropdown">
                                        <button type="button" class="btn btn-sm btn-info btn-rounded dropdown-toggle" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            View All
                                        </button>
                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                            <a class="dropdown-item" href="<?php echo base_url()."Admin/admin_staff_list";?>">All Staff</a>
                                            <a class="dropdown-item" href="<?php echo base_url()."Admin/admin_staff_add";?>">Add New Staff</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-3 align-items-center" id="bar-parent5">
                                    <div class="progress-wrapper" data-height="6" style="height: 6px">
                                        <div class="progress" style="height: 6px"><div class="progress-bar" role="progressbar" style="width: 55%;" aria-valuenow="55" aria-valuemin="0" aria-valuemax="100" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="Total 37,545"></div></div>
                                    </div>
                                    <div class="absolute-right text-right" style="margin-top: 18px">
                                        <p class="mb-0 font-weight-900">55%</p>
                                        <p class="text-muted mb-0">Total 37,545</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 19 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>tions = new Dictionary<string, string>();
            var result = "test1";
            _cache.Setup(x => x.Set(It.Is<string>(key => key == result), It.IsAny<object>())).Callback((string key, object obj) =>
            {
                options[key] = JsonConvert.SerializeObject(obj);
            });

            var response = new Response
            {
                Data = result,
                Status = "SUCCESS",
                StatusCode = "1"
            };
            await _client.AddResponse(request, response);

            _cache.Verify(x => x.Set(It.Is<string>(key => key == result), It.IsAny<object>()), Times.Once);
            var expectedOptions = new CachedResponse
            {
                CachedDate = DateTimeOffset.Now.ToString("yyyy'-'MM'-'dd HH':'mm':'ss'.'fff"),
                Status = "SUCCESS",
                StatusCode = "1"
            };
            Assert.Equal(JsonConvert.SerializeObject(expectedOptions), options["test1"]);
        }

        [Fact]
        public async Task AddResponse_Should_SetCachedResponse_WhenStatusCodeIs204()
        {
            var request = new Request { Endpoint = "test", Body = "test-body-value", Method = Method.POST, CacheKey = "custom-key" };
            var options = new Dictionary<string, string>();
            var result = "test1";
            _cache.Setup(x => x.Set(It.Is<string>(key => key == result), It.IsAny<object>())).Callback((string key, object obj) =>
            {
                options[key] = JsonConvert.SerializeObject(obj);
            });

            var response = new Response
            {
                Data = result,
                Status = "SUCCESS",
                StatusCode = "204"
            };
            await _client.AddResponse(request, response);

            _cache.Verify(x => x.Set(It.Is<string>(key => key == result), It.IsAny<object>()), Times.Once);
            var expectedOptions = new CachedResponse
            {
                CachedDate = DateTimeOffset.Now.ToString("yyyy'-'MM'-'dd HH':'mm':'ss'.'fff"),
                Status = "SUCCESS",
                StatusCode = "204"
            };
            Assert.Equal(JsonConvert.SerializeObject(expectedOptions), options["test1"]);
        }

        [Fact]
        public async Task AddResponse_Should_ReturnFalse_WhenStatusCodeIs304()
        {
            var request = new Request { Endpoint = "test", Body = "test-body-value", Method = Method.POST, CacheKey = "custom-key" };
            var options = new Dictionary<string, string>();
            var result = "test1";
            _cache.Setup(x => x.Set(It.Is<string>(key => key == result), It.IsAny<CachedResponse>())).Callback((string key, object obj) =>
            {
                options[key] = JsonConvert.SerializeObject(obj);
            });

            var response = new Response
            {
                Status = "SUCCESS",
                StatusCode = "304"
            };
            var isCached = await _client.AddResponse(request

Precision: 0
Recall: 0
F1 Score: 0
