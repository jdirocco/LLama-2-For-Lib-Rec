<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications, provide recommendations exclusively in the Maven format: groupId:artifactId:version. Here is an example of how recommendations should be formatted:
    # Example 1
    Project: 'Project A'
    Description: 'A web application for managing tasks.'
    Existing Dependencies:
    - group:artifact:version
    Recommended Libraries:
    - group:artifact:version
    - group:artifact:version


    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Here are the top 20 libraries that are used in Java projects:
    junit:junit, org.slf4j:slf4j-api, log4j:log4j, com.google.guava:guava, commons-io:commons-io, org.slf4j:slf4j-log4j12, commons-lang:commons-lang, commons-codec:commons-codec, org.mockito:mockito-core, javax.servlet:servlet-api, joda-time:joda-time, org.apache.httpcomponents:httpclient, org.mockito:mockito-all, commons-logging:commons-logging, com.google.code.gson:gson, com.fasterxml.jackson.core:jackson-databind, ch.qos.logback:logback-classic, org.apache.commons:commons-lang3, org.springframework:spring-context, org.springframework:spring-test
    Project Name: facebook/fresco
    Project Description: Fresco\n\n\n\n\n\n\nFresco is a powerful system for displaying images in Android applications.\n\nFresco takes care of image loading and display, so you don\'t have to. It will load images from the network, local storage, or local resources, and display a placeholder until the image has arrived. It has two levels of cache; one in memory and another in internal storage.\n\nIn Android 4.x and lower, Fresco puts images in a special region of Android memory. This lets your application run faster and suffer the dreaded much less often.\n\nFresco also supports:\n\n streaming of progressive JPEGs\n display of animated GIFs and WebPs\n extensive customization of image loading and display\n and much more!\n\nFind out more at our .\n\n Requirements\n\nFresco can be included in any Android application.\n\nFresco supports Android 2.3 Gingerbread and later.\n\n Using Fresco in your application\n\nIf you are building with Gradle, simply add the following line to the section of your file:\n\n\n\nFor full details, visit the documentation on our web site, available in English and Chinese:\n\n\n\n\n\n Join the Fresco community\n\nPlease use our to let us know of any problems.\n\nFor pull requests, please see the file for information on how to help out. See our for information on how to build from source.\n\n\n License\nFresco is .\n'
    Existing Dependencies:
    :drawee-backends
- :samples
- com.caverock:androidsvg
- com.jakewharton.picasso:picasso2-okhttp3-downloader
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
    
@if ($paginator->hasPages())
        @php
            $link_limit = 7;    
        @endphp 
        <ul class="pagination justify-content-md-center" role="navigation">
            {{-- Previous Link --}}
            @if ($paginator->onFirstPage())
                <li class="page-item disabled mx-1" aria-disabled="true">
                    <span class="page-link">@lang('pagination.previous')</span>
                </li>
            @else
                <li class="page-item mx-1">
                    <a class="page-link" href="{{ $paginator->previousPageUrl() }}" rel="prev">@lang('pagination.previous')</a>
                </li>
            @endif
            {{-- Pagination Elements --}}
            @foreach ($elements as $element)
                {{-- "Three Dots" Separator --}}
                @if (is_string($element))
                    <li class="page-item disabled mx-1" aria-disabled="true"><span class="page-link">{{ $element }}</span></li>
                @endif
                {{-- Array Of Links --}}
                @if (is_array($element))
                    @foreach ($element as $page => $url)
                        @if ($page == $paginator->currentPage())
                            <li class="page-item active mx-1" aria-current="page"><span class="page-link">{{ $page }}</span></li>
                        @elseif($page > $paginator->currentPage() - $link_limit && $page < $paginator->currentPage() + $link_limit)
                            <li class="page-item mx-1"><a href="{{ $url }}" class="page-link">{{ $page }}</a></li>
                        @elseif($page == $paginator->lastPage() - 1)
                            <li class="page-item disabled mx-1" aria-disabled="true"><a href="{{ $url }}" class="page-link">{{ $page }}</a></li>
                        @endif
                    @endforeach
                @endif
            @endforeach
            {{-- Next Link --}}
            @if ($paginator->hasMorePages())
                <li class="page-item mx-1">
                    <a class="page-link" href="{{ $paginator->nextPageUrl() }}" rel="next">@lang('pagination.next')</a>
                </li>
            @else
                <li class="page-item disabled mx-1" aria-disabled="true">
                    <span class="page-link">@lang('pagination.next')</span>
                </li>
            @endif


        </ul>
    @endif




    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>    }
    }
}
 ï»¿using Xamarin.Forms;

namespace XForms.Test
{
    public partial class AboutPage : ContentPage
    {
        public AboutPage()
        {
            InitializeComponent();
    

Precision: 0
Recall: 0
F1 Score: 0
