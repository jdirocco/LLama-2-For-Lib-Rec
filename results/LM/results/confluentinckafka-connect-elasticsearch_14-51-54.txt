<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications, provide recommendations exclusively in the Maven format: groupId:artifactId:version. Here is an example of how recommendations should be formatted:
    # Example 1
    Project: 'Project A'
    Description: 'A web application for managing tasks.'
    Existing Dependencies:
    - group:artifact:version
    Recommended Libraries:
    - group:artifact:version
    - group:artifact:version


    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Here are the top 20 libraries that are used in Java projects:
    junit:junit, org.slf4j:slf4j-api, log4j:log4j, com.google.guava:guava, commons-io:commons-io, org.slf4j:slf4j-log4j12, commons-lang:commons-lang, commons-codec:commons-codec, org.mockito:mockito-core, javax.servlet:servlet-api, joda-time:joda-time, org.apache.httpcomponents:httpclient, org.mockito:mockito-all, commons-logging:commons-logging, com.google.code.gson:gson, com.fasterxml.jackson.core:jackson-databind, ch.qos.logback:logback-classic, org.apache.commons:commons-lang3, org.springframework:spring-context, org.springframework:spring-test
    Project Name: confluentinc/kafka-connect-elasticsearch
    Project Description: Kafka Connect Elasticsearch Connector\n\n\nChangelog for this connector can be found .\n\nkafkaconnectelasticsearch is a \nfor copying data between Kafka and Elasticsearch.\n\n Development\n\nTo build a development version you\'ll need a recent version of Kafka as well as a set of upstream Confluent projects, which you\'ll have to build from their appropriate snapshot branch. See the for guidance on this process.\n\nYou can build kafkaconnectelasticsearch with Maven using the standard lifecycle phases.\n\n Configuring\n Creating an Elasticsearch user and assigning required privileges\n Create an Elasticsearch role\n\n Create an Elasticsearch user\n\n\n Contribute\n\n Source Code: Issue Tracker: Learn how to work with the connector\'s source code by reading our .\n\n\n License\n\nThis project is licensed under the .\n\n\n\n'
    Existing Dependencies:
    org.hamcrest:hamcrest-junit
- org.apache.kafka:connect-api
- org.apache.kafka:connect-json
- net.java.dev.jna:jna
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
    

    <div class="content-wrapper">
    <div class="container-fluid">
    <!-- End of Page Content -->
     <?php if($this->session->flashdata('error')):?>
            <?php echo '<div class="alert alert-danger">'.$this->session->flashdata('error').'</div>';?>
          <?php endif;?>
      <?php if($this->session->flashdata('message')):?>
            <?php echo '<div class="alert alert-success">'.$this->session->flashdata('message').'</div>';?>
          <?php endif;?> 

       
        <!-- DataTables Example -->
        <div class="card mb-3">
          <div class="card-header">
            <i class="fas fa-table"></i>
           View Users</div>
         <div class="col-lg-12 ">
            <div class="col-4"> <a href="#" class="btn btn-outline-success" data-toggle="modal" data-target="#exampleModal">Add New User</a></div>
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-bordered" id="user_datatable" width="100%" cellspacing="0">
                <thead>
                  <tr>
                    <th>#</th>
                    <th>First Name</th>
                    <th>Lastname</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Action</th>
                  </tr>
                </thead>
               
                <tbody>     
                 
             
                </tbody>
              </table>
            </div>
          </div>
         
          
      
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Add User</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
         <form method="post" action="<?php echo base_url();?>User/add_user" id="user"> 
            <div class="form-group">
              <label for="inputEmail4">Firstname</label>
              <?php echo form_error('firstname');?>
              <input type="text" name="first_name" class="form-control" id="inputEmail4" placeholder="Enter Firstname"  value="<?php echo set_value('first_name');?>">
            </div>
            <div class="form-group">
              <label for="inputEmail4">Lastname</label>
              <?php echo form_error('lastname');?>
              <input type="text" name="last_name" class="form-control" id="inputEmail4" placeholder="Enter Lastname"  value="<?php echo set_value('last_name');?>">
            </div>            
            
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s> import React, { useCallback, useContext, useMemo, useState } from "react";
import PropTypes from "prop-types";
import {
  FormattedMessage,
  injectIntl,
  intlShape,
  defineMessages,
} from "react-intl";
import styled from "styled-components";

import {
  Button,
  ButtonBar,
  DataTable,
  HeadCell,
  PagingToolbar,
  SortDirection,
} from "components";

import { useFetch } from "hooks";
import {
  useCurrentTeamState,
  useCurrentUserState,
  useToastContext,
} from "contexts";

import CreateOrganizationDialog from "./components/CreateOrganizationDialog";
import { UserContext } from "components/UserContext";

const messages = defineMessages({
  addOrganization: {
    defaultMessage: "Add an Organization",
    description:
      "Text to display on the button to open the dialog to create an orgaization.",
    id: "components.OrganizationTable.addOrganization",
  },
  organizationName: {
    defaultMessage: "Name",
    description:
      "Heading for the column that lists the name of a given organization.",
    id: "components.OrganizationTable.organizationName",
  },
  teamLead: {
    defaultMessage: "Team Lead",
    description: "Heading for the column that lists the team lead of the orgaization.",
    id: "components.OrganizationTable.teamLead",
  },
  organization: {
    defaultMessage: "Organization",
    description:
      "Heading for the column that lists the organizations of the current user.",
    id: "components.OrganizationTable.organization",
  },
  organizationActions: {
    defaultMessage: "Actions",
    description:
      "Heading for the column that lists the actions for each organization",
    id: "components.OrganizationTable.organizationActions",
  },
  noData: {
    defaultMessage: "No organizations.",
    description:
      "Message to be displayed on the table when there are no organizations.",
    id: "components.OrganizationTable.noData",
  },
  noUser: {
    defaultMessage: "No user found.",
    description:
      "Message to be displayed when the user searched is not found.",
    id: "components.OrganizationTable.noUser",
  },
  removeUserConfirmation: {
    defaultMessage: "Are you sure?",
    description:
      "Text for the confirmation pop up when the action is remove user.",
    id: "components.UserTable.removeUserConfirmation",
  },
  removeOrganizationConfirmation: {
    defaultMessage: "Are you sure?",
    description:
        "Text for the confirmation pop up when the action is remove organization.",
    id: "components.OrganizationTable.removeOrganizationConfirmation",
  },
});

const TableContainer = styled.div`
  display: flex;
  flex-flow: column nowrap;
  height: 100%;
  overflow: hidden;
  padding: 16px;
`;

const Table = styled(DataTable)`
  flex: 1;
  overflow: auto;
`;

const ActionButton = styled(Button)`
  padding: 10

Precision: 0
Recall: 0
F1 Score: 0
