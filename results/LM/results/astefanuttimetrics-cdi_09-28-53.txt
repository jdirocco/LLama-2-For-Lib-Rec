<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications, provide recommendations exclusively in the Maven format: groupId:artifactId:version. Here is an example of how recommendations should be formatted:
    # Example 1
    Project: 'Project A'
    Description: 'A web application for managing tasks.'
    Existing Dependencies:
    - group:artifact:version
    Recommended Libraries:
    - group:artifact:version
    - group:artifact:version


    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Here are the top 20 libraries that are used in Java projects:
    junit:junit, org.slf4j:slf4j-api, log4j:log4j, com.google.guava:guava, commons-io:commons-io, org.slf4j:slf4j-log4j12, commons-lang:commons-lang, commons-codec:commons-codec, org.mockito:mockito-core, javax.servlet:servlet-api, joda-time:joda-time, org.apache.httpcomponents:httpclient, org.mockito:mockito-all, commons-logging:commons-logging, com.google.code.gson:gson, com.fasterxml.jackson.core:jackson-databind, ch.qos.logback:logback-classic, org.apache.commons:commons-lang3, org.springframework:spring-context, org.springframework:spring-test
    Project Name: astefanutti/metrics-cdi
    Project Description: CDI Extension for Metrics\n\n.\n\nThe mechanism can be used to customize the instances that get registered. Besides, the mechanism can be used for the application to provide a custom support is automatically activated when the optional dependency is present in the classpath.\n\n, it may be necessary for an application to explicitly provide the instances to register. For example, to provide particular implementations to , so that the application may provide a custom instance.\n\nMetrics CDI then automatically registers any instance with the configured instance.\nA bean can be declared as any CDI bean, e.g. with a bean class:\n\n\n\n Metrics CDI Configuration\n\nMetrics CDI fires a event at deployment time that can be used by the application to configure it, e.g.:\n\n\n\nNote that this event can only be used within the context of the observer method invocation. Any attempt to call one of its methods outside of that context will result in an to be thrown.\n\n Limitations\n\nCDI 1.2 leverages on Java Interceptors Specification 1.2 to provide the ability to associate interceptors to beansBinding an interceptor to a bean via typesafe interceptor bindings. Interceptors are a mean to separate crosscutting concerns from the business logic and Metrics CDI is relying on interceptors to implement the support of Metrics annotations in a CDI enabled environment.\n\nCDI 1.2 sets additional restrictions about the type of bean to which an interceptor can be bound. From a Metrics CDI enduser perspective, that implies that the managed beans to be monitored with Metrics i.e. having at least one member method annotated with one of the Metrics annotations must be proxyable bean types, as defined in Unproxyable bean types, that are:\n Classes which don\xe2\x80\x99t have a nonprivate constructor with no parameters,\n Classes which are declared ,\n Classes which have nonstatic, final methods with public, protected or default visibility,\n Primitive types,\n And array types.\n\nJava Interceptors Specification 1.2: an interceptor to a bean: bean types: License\n\nCopyright \xc2\xa9 2013, Antonin Stefanutti\n\nPublished under Apache Software License 2.0, see LICENSE\n'
    Existing Dependencies:
    org.apache.geronimo.specs:geronimo-annotation_1.2_spec
- org.apache.logging.log4j:log4j-core
- org.apache.geronimo.specs:geronimo-jcdi_1.1_spec
- org.jboss.shrinkwrap.descriptors:shrinkwrap-descriptors-depchain
- org.apache.geronimo.specs:geronimo-interceptor_1.2_spec
- io.astefanutti.metrics.cdi:metrics-cdi
- org.apache.geronimo.specs:geronimo-atinject_1.0_spec
- org.eclipse.jetty:jetty-annotations
- javax.servlet.jsp:javax.servlet.jsp-api
- org.apache.logging.log4j:log4j-slf4j-impl
- org.hamcrest:java-hamcrest
- org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-depchain
- org.apache.geronimo.specs:geronimo-el_2.2_spec
- org.jboss.weld:weld-core-bom
- io.dropwizard.metrics:metrics-core
- org.slf4j:jul-to-slf4j
- org.jboss.shrinkwrap.descriptors:shrinkwrap-descriptors-bom
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 18 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
    
@extends('app')

@section('content')
<div class="container-fluid">
		<!-- Page Heading -->
	<div class="row">
	    <div class="col-lg-12">
	        <h1 class="page-header">
	            Dashboard <small>Statistics Overview</small>
	        </h1>
	    </div>
	</div>
    <!-- /.row -->
    <div class="card-body">
    <div class="row">
        <div class="col-lg-3 col-md-6">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-xs-3">
                            <i class="fa  fa-users fa-5x"></i>
                        </div>
                        <div class="col-xs-9 text-right">
                            <div class="huge"><h4>{{ $totalPelapor }}</h4></div>
                            <div>Jumlah Data Pelapor</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="panel panel-green">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-xs-3">
                            <i class="fa fa-user fa-5x"></i>
                        </div>
                        <div class="col-xs-9 text-right">
                            <h5><div class="huge">{{ $totalAdmin }}</div></h5>
                            <div>Jumlah Admin</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="panel panel-yellow">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-xs-3">
                            <i class="fa fa-file fa-5x"></i>
                        </div>
                        <div class="col-xs-9 text-right">
                            <div class="huge"><h4>{{ $totalKasus }}</h4></div>
                            <div>Jumlah Data Kasus</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="panel panel-red">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-xs-3">
                            <i class="fa fa-database fa-5x"></i>
                        </div>
                        <div class="col-xs-9 text-right">
                            <div class="huge"><h4>{{ $totalKota }}</h4></div>
                            <div>Jumlah Data Kota</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 18 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s> ï»¿// Copyright (c).NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

using Microsoft.AspNetCore.Razor.Language;

namespace Microsoft.CodeAnalysis.Razor
{
    /// <summary>
    /// A service abstraction that is used for finding Razor documents within projects.
    /// </summary>
    public interface RazorProjectIteme);
    }
}
Lookup
    {
        /// <summary>
        /// Looks for a Razor document of the specified name in all project items.
        /// The lookup operation will be limited to project items of type
        /// <see cref="RazorFileChangeEventArgs.FileKinds"/>.
        /// </summary>
        /// <param name="name">The document name to look for in all project items. May contain "\" or "/" separators.</param>
        /// <param name="project">The <see cref="WorkspaceProject"/> to find Razor documents in.</param>
        /// <returns>The <see cref="ProjectItem"/> that contains a document of the specified name or <c>null</c> if none were found.</returns>
        ProjectItem FindItem(string name, WorkspaceProject project);

        /// <summary>
        /// Looks for Razor documents in all project items whose <see cref="ProjectItem.FilePath"/> ends with
        /// <code>.cshtml</code> or <code>.cshtml.cs</code> or whose <see cref="ProjectItem.BaseIntermediateOutputPath"/>
        /// matches the specified name.
        /// </summary>
        /// <param name="name">The path to the file to find or <c>null</c>.</param>
        /// <param name="project">The <see cref="WorkspaceProject"/> to find Razor documents in.</param>
        /// <returns>All <see cref="ProjectItem"/> documents matching <paramref name="name"/> in <paramref name="project"/>.</returns>
        IEnumerable<ProjectItem> FindItems(string name, WorkspaceProject project, RazorFileChangeKind? fileKind);

        /// <summary>
        /// Looks for RazorDocuments in all project items matching the specified file path.
        /// </summary>
        /// <param name="filePath">The file path or <c>null</c>.</param>
        /// <param name="project">The <see cref="WorkspaceProject"/> to find Razor documents in.</param>
        /// <returns>All RazorDocuments in <paramref name="project"/> with a matching file path.</returns>
        IEnumerable<ProjectItem> FindItemsByFilePath(string filePath, WorkspaceProject project, RazorFileChangeKind? fileKind);

        /// <summary>
        /// Gets the <see cref="ProjectItem"/> that contains the specified source document file.
        /// </summary>
        /// <param name="sourceDocumentFilePath">The file path of the <see cref="SourceDocument"/>.</param>
        /// <param name="project">The <see cref="WorkspaceProject"/> to find Razor documents in.</param>
        /// <returns>The <see cref="ProjectItem"/> that contains the specified <see cref="SourceDocument"/> or <c>null</c> if none.</returns>
        ProjectItem FindItemBySourceDocument(string sourceDocumentFilePath, WorkspaceProject project);


Precision: 0
Recall: 0
F1 Score: 0
