<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications, provide recommendations exclusively in the Maven format: groupId:artifactId:version. Here is an example of how recommendations should be formatted:
    # Example 1
    Project: 'Project A'
    Description: 'A web application for managing tasks.'
    Existing Dependencies:
    - group:artifact:version
    Recommended Libraries:
    - group:artifact:version
    - group:artifact:version


    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Here are the top 20 libraries that are used in Java projects:
    junit:junit, org.slf4j:slf4j-api, log4j:log4j, com.google.guava:guava, commons-io:commons-io, org.slf4j:slf4j-log4j12, commons-lang:commons-lang, commons-codec:commons-codec, org.mockito:mockito-core, javax.servlet:servlet-api, joda-time:joda-time, org.apache.httpcomponents:httpclient, org.mockito:mockito-all, commons-logging:commons-logging, com.google.code.gson:gson, com.fasterxml.jackson.core:jackson-databind, ch.qos.logback:logback-classic, org.apache.commons:commons-lang3, org.springframework:spring-context, org.springframework:spring-test
    Project Name: thymeleaf/thymeleaf-spring
    Project Description: \n thymeleafspring\n \n\nThis repository contains:\n\n thymeleafspring3: Thymeleaf integration package for Spring 3.x\n thymeleafspring4: Thymeleaf integration package for Spring 4.x\n thymeleafspring5: Thymeleaf integration package for Spring 5.x\n \nTo learn more and download latest version:\n \n \n'
    Existing Dependencies:
    org.springframework:spring-expression
- org.thymeleaf:thymeleaf
- org.springframework:spring-web
- org.springframework:spring-webflux
- org.springframework.webflow:spring-js
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
    
    <link href="<?php echo base_url().$this->session->userdata('theme');?>plugins/slick-carousel/slick/slick.css" rel="stylesheet">
    <link href="<?php echo base_url().$this->session->userdata('theme');?>plugins/slick-carousel/slick/slick-theme.css" rel="stylesheet">

    <link href="<?php echo base_url().$this->session->userdata('theme');?>plugins/cube-portfolio/cubeportfolio/css/cubeportfolio.min.css" rel="stylesheet">

    <link href="<?php echo base_url().$this->session->userdata('theme');?>css/shop.css" rel="stylesheet">

<style type="text/css">
    
.product-list {
    display: -ms-flexbox;
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    margin-top: 1rem;
}

.single-product-item {
    margin-top: 1rem;
    margin-bottom: 1rem;
}

.single-product-item:first-of-type {
    margin-top: 0;
}
.single-product-item:last-of-type {
    margin-bottom: 0;
}

.product-image-wrapper {
    position: relative;
    display: -ms-flexbox;
    display: -webkit-box;
    display: flex;
    -ms-flex-align: center;
    -webkit-box-align: center;
    align-items: center;
    width: 68px;
    height: 68px;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    padding: 3px;
    margin-right: 20px;
    border: 1px solid #e6e6e6;
    border-radius: 20px;
}

.product-image-wrapper img {
    width: 100%;
}

.single-product-action {
    padding: 3px;
}

.single-product-action.btn {
    padding: 2px 10px;
    font-size: 12px;
}

.single-product-action.btn:last-child {
    font-size: 10px;
}

.single-product-action.btn.fa {
    font-size: 14px;
}

.single-product-body {
    display: -ms-flexbox;
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    padding-left: 30px;
}

.single-product-body h4 {
    font-size: 13px;
    font-weight: 600;
    margin-bottom: 0;
}

.single-product-body h5 {
    font-size: 12px;
    margin-bottom: 0;
}

.single-product-body h5 a {
    font-size: 1
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>t(this.get('model.project.name'))
   .then(project => {
      this.set('project', project);
      
    });
  },

  actions: {
    deleteProject(){
      if (confirm("Are you sure you want to delete this project?")){
        this.get('model').destroyRecord();
        this.transitionToRoute('projects');
      }
    }
  }
});

 import Controller from '@ember/controller';
import { inject as service } from '@ember/service';

export default Controller.extend({
  store: service(),
  init(){
    this._super(...arguments);
    return this.get('store').findAll('project');
    this.get('model.project.name');
  },
  setupController: function(controller){
    controller.set('model', this);
    this.set('isEditing', false);
    controller.store.findRecor

Precision: 0
Recall: 0
F1 Score: 0
