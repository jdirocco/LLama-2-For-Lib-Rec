<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications, provide recommendations exclusively in the Maven format: groupId:artifactId:version. Here is an example of how recommendations should be formatted:
    # Example 1
    Project: 'Project A'
    Description: 'A web application for managing tasks.'
    Existing Dependencies:
    - group:artifact:version
    Recommended Libraries:
    - group:artifact:version
    - group:artifact:version


    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Here are the top 20 libraries that are used in Java projects:
    junit:junit, org.slf4j:slf4j-api, log4j:log4j, com.google.guava:guava, commons-io:commons-io, org.slf4j:slf4j-log4j12, commons-lang:commons-lang, commons-codec:commons-codec, org.mockito:mockito-core, javax.servlet:servlet-api, joda-time:joda-time, org.apache.httpcomponents:httpclient, org.mockito:mockito-all, commons-logging:commons-logging, com.google.code.gson:gson, com.fasterxml.jackson.core:jackson-databind, ch.qos.logback:logback-classic, org.apache.commons:commons-lang3, org.springframework:spring-context, org.springframework:spring-test
    Project Name: abstratt/textuml
    Project Description: TextUML Toolkit\r\n===============\r\n\r\n\r\nTextUML is a textual notation for UML that supports:\r\n classes\r\n associations\r\n attributes\r\n operations\r\n constraints invariants, preconditions\r\n state machines\r\n activities and actions\r\n\r\nTextUML can currently be used in three different ways:\r\n as a language plugin for Eclipse, a.k.a. the TextUML Toolkit proper\r\n as a standalone commandline compiler\r\n as part of , a webbased IDE for modeldriven development based on TextUML. \r\n\r\nSee full documentation .\r\n'
    Existing Dependencies:
    org.eclipse.uml2:uml
- org.eclipse.uml2.uml:resources
- commons-logging:commons-logging
- com.abstratt:com.abstratt.standalone
- org.eclipse.equinox:app
- com.ibm:icu
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 6 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
    
    <div class="container">

      <!-- Heading Row -->
      <div class="row align-items-center my-5">
        <div class="col-lg-7">
          <img  src="assets/img/about.jpg" class="img-fluid rounded" alt="">
        </div>
        <!-- /.col-lg-8 -->
        <div class="col-lg-5">
          <h1 class="font-weight-light">About</h1>
          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Corporis, omnis doloremque non cum id reprehenderit, quisquam totam aspernatur tempora minima unde aliquid ea culpa sunt. Reiciendis quia dolorum ducimus unde.</p>
        </div>
        <!-- /.col-md-4 -->
      </div>
      <!-- /.row -->

      <!-- Call to Action Well -->
      <div class="card text-white bg-secondary my-5 py-4 text-center">
        <div class="card-body">
          <p class="text-white m-0"></p>
        </div>
      </div>

      <!-- Content Row -->
      <div class="row">
        <div class="col-md-4 mb-5">
          <div class="card h-100">
            <div class="card-body">
              <h2 class="card-title">Card Title</h2>
              <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Rem magni quas ex numquam, maxime minus quam quod asperiores pagosit.</p>
            </div>
            <div class="card-footer">
              <a href="#" class="btn btn-primary">Find Out More!</a>
            </div>
          </div>
        </div>
        <!-- /.col-md-4 -->
        <div class="col-md-4 mb-5">
          <div class="card h-100">
            <div class="card-body">
              <h2 class="card-title">Card Title</h2>
              <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quod tenetur ex natus at dolorem enim! Nesciunt pariatur voluptatem sunt quam eaque, vel, non in id dolore voluptates quos eligendi labore.</p>
            </div>
            <div class="card-footer">
              <a href="#" class="btn btn-primary">Find Out More!</a>
            </div>
          </div>
        </div>
        <!-- /.col-md-4 -->
        <div class="col-md-4 mb-5">
          <div class="card h-100">
            <div class="card-body">
              <h2 class="card-title">Card Title</h2>
              <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quod tenetur ex natus at dolorem enim! Nesciunt pariatur voluptatem sunt quam eaque, vel, non in id dolore voluptates
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 6 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>t(0);

        $this->assertInstanceOf(Collection::class, $result);
    }

    public function testGetUser(): void
    {
        $this->http->shouldReceive('post')->andReturn([]);

        $user = $this->client->getUser(1);

        $this->assertInstanceOf(Model::class, $user);
    }
}
 <?php

declare(strict_types = 1);

namespace Arquivei\LaravelPrometheusExporter\Tests;

use Illuminate\Support\Collection;
use Illuminate\Support\Facades\Http;
use Mockery as m;
use Illuminate\Database\Eloquent\Model;

class ClientTest extends TestCase
{
    private $http;

    private $client;

    /**
     * Setup the test environment.
     */
    protected function setUp(): void
    {
        parent::setUp();

        $this->http = m::mock(Http::class);

        $this->client = (new Client($this->http))->setBaseUri('http://localhost/');
    }

    protected function tearDown(): void
    {
        parent::tearDown();

        m::close();
    }

    public function testGetStatus(): void
    {
        $this->http->shouldReceive('post')->andReturn([]);

        $response = $this->client->getStatus();

        $this->assertInstanceOf(Model::class, $response);
    }

    public function testGetUsers(): void
    {
        $this->http->shouldReceive('post')->andReturn([1, 2, 3]);

        $result = $this->client->getUsers(['name' => 'foo'])->ge

Precision: 0
Recall: 0
F1 Score: 0
