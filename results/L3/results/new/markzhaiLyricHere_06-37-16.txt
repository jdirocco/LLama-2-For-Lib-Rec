<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications. provide recommendations exclusively in the Maven format: groupId:artifactId:version.
    Given the project details below:
    Project Name: patloew/RxLocation
Project Description: The Reactive Location API Library for Android is now deprecated and not maintained anymore. Please switch to the CoLocation library by Micha\xc5\x82 Charmas. This library wraps the Location APIs in RxJava 2.x.
Existing Dependencies Include: org.powermock:powermock-module-junit4
- io.reactivex.rxjava2:rxandroid
- com.squareup.leakcanary:leakcanary-android
- io.reactivex.rxjava2:rxjava
- com.google.android.gms:play-services-location
- com.squareup.leakcanary:leakcanary-android-no-op

Project Name: frankred/jSona
Project Description: JSona is a configuration file(JSON), vcj and JavaFx based music and media player. The aim is to always keep your playlists in synch with your music folders. For fast fulltext search jSona uses Apache Lucene (http://lucene.apache.org/core/).
Existing Dependencies Include: uk.co.caprica:vlcj
- org.apache.lucene:lucene-analyzers-common
- org.apache.lucene:lucene-core
- commons-io:commons-io
- com.mpatric:mp3agic
- org.apache.lucene:lucene-queryparser
- com.github.tulskiy:jkeymaster
- org.apache.commons:commons-lang3

Project Name: querydsl/querydsl
Project Description: Querydsl is a framework which enables the construction of type-safe SQL-like queries for multiple backends including JPA, MongoDB and SQL in Java. Querying JPA and MongoDB using a fluent API.
Existing Dependencies Include: org.springframework:spring-aop
- com.mysema.codegen:codegen
- org.xerial:sqlite-jdbc
- org.springframework:spring-test
- com.google.guava:guava
- com.jolbox:bonecp
- org.hamcrest:hamcrest-library
- com.oracle:ojdbc6
- com.querydsl:querydsl-sql-spatial
- com.google.inject.extensions:guice-persist
- com.querydsl:querydsl-apt
- org.postgresql:postgresql
- org.easymock:easymock
- com.querydsl:querydsl-spatial
- org.hibernate:hibernate-ehcache
- javax.inject:javax.inject
- org.springframework:spring-context
- org.eclipse.persistence:eclipselink
- org.firebirdsql.jdbc:jaybird-jdk16
- log4j:log4j
- org.mongodb.morphia:morphia
- org.hsqldb:hsqldb
- cglib:cglib
- org.apache.lucene:lucene-queryparser
- org.hibernate.javax.persistence:hibernate-jpa-2.0-api
- org.apache.maven:maven-project
- org.hibernate:hibernate-envers
- com.querydsl:querydsl-codegen
- net.sourceforge.jtds:jtds
- org.springframework.roo:org.springframework.roo.annotations
- org.apache.ant:ant
- com.querydsl:querydsl-lucene3
- com.thoughtworks.proxytoys:proxytoys
- org.scala-lang:scala-library
- org.geolatte:geolatte-geom
- com.h2database:h2
- com.querydsl:querydsl-sql-codegen
- org.hibernate:hibernate-annotations
- org.scala-lang:scala-compiler
- org.reflections:reflections
- org.datanucleus:datanucleus-api-jdo
- org.mongodb:mongo-java-driver
- org.hibernate:hibernate-validator
- com.infradna.tool:bridge-method-annotation
- com.querydsl:querydsl-sql-spring
- javax.transaction:jta
- org.slf4j:slf4j-log4j12

Project Name: GoogleCloudPlatform/google-cloud-datastore
Project Description: This repository contains low-level Java and Python client libraries for Google Cloud Datastore. For more idiomatic and usable client libraries in these languages, please visit the [Google Cloud Dataastore Client for Java][java-datastore] and Google Cloud Database Client for Python
Existing Dependencies Include: com.google.http-client:com.google.http-client
- com.google.truth:com.google.truth
- com.google.cloud.datastore:datastore-v1-proto-client
- com.google.guava:com.google.guava
- com.google.api-client:com.google.api-client
- com.google.oauth-client:google-oauth-client
- com.google.truth:truth
- com.google.oauth-client:com.google.oauth-client

Project Name: eclipse/tycho
Project Description: Eclipse Tycho is a manifest-first way to build and build Eclipse plug-ins/OSGi bundles/RCP applications\n，nwith Maven. This repository contains all the features and documentation that will help you migrate to the official Eclipse site.
Existing Dependencies Include: org.apache.maven.plugin-tools:maven-plugin-annotations
- org.codehaus.plexus:plexus-component-annotations
- org.codehaus.plexus:plexus-container-default
- org.eclipse.tycho:tycho-testing-harness
- org.apache.maven:maven-core
- org.eclipse.tycho:org.eclipse.jdt.compiler.apt
- org.codehaus.plexus:plexus-utils
- org.eclipse.tycho:org.eclipse.osgi
- org.eclipse.tycho:tycho-core
- org.apache.commons:commons-exec
    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Reccomend me some of these libraries that can be added to the project to enhance its capabilities.
    Project Name: markzhai/LyricHere
    Project Description: Material design music and lyric player. Using Android’s new android.media.MediaMetadata series api to implement. (For Chinese \xe4\xb8\xad\xe6\x96\x87\xe7\x88\xb3\xe8\xcbf\x99\xe9\x86c)
    Existing Dependencies:
    com.hannesdorfmann.mosby:viewstate
- com.chrisanderson.mediabrowsercompat:library
- com.raizlabs.android:DBFlow-Compiler
- com.raizlabs.android:DBFlow
- com.hannesdorfmann.mosby:mvp
- com.android.support:mediarouter-v7
- frankiesardo:icepick-processor
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
     As an AI specializing in software library recommendations for Java applications, I would suggest the following five libraries to enhance the capabilities of the "markzhai/LyricHere" project:

1. com.google.android.gesture:gesture - This library provides a gesture handling framework for Android, allowing for more intuitive and efficient user interaction with the app. By incorporating gestures, the app can offer a more seamless and enjoyable user experience.
2. com.squareup.picasso:picasso - This library provides a high-performance image loading library for Android, allowing for faster and more reliable image loading within the app. With Picasso, the app can display images more efficiently and with less stuttering.
3. org.jetbrains.kotlinx:kotlinx-coroutines-android - This library provides a coroutine library for Android, enabling the app to take advantage of background threads and perform tasks asynchronously. This can improve the app's performance and responsiveness, especially when handling large amounts of data.
4. com.github.nkzawa:socket.io-client-java - This library provides a Socket.IO client for Java, allowing for real-time communication between the app and a server. This can be useful for features like live lyrics updates or social features that require real-time communication.
5. com.github.orhanobut:hawk-android - This library provides a secure and reliable storage solution for Android, allowing for persisting data even when the app is not running. With Hawk, the app can store and retrieve data more securely and reliably, ensuring that user preferences and other important data are not lost.

These libraries can help enhance the capabilities of the "markzhai/LyricHere" project by providing more intuitive user interaction, faster and more reliable image loading, background threading for improved performance, real-time communication, and secure data storage. By incorporating these libraries, the app can offer a more enjoyable and reliable user experience.
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s> # Maven Dependencies

Here are the Maven dependencies required for the project:

1. com.google.android.gms:play-services-maps:16.0.0
2. com.android.support:support-v4:28.0.0
3. com.android.support.constraint:constraint-layout:2.0.1
4. com.android.support:support-vector-drawable:28.0.0
5. com.android.support:support-annotations:28.0.0
6. org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.32
7. org.jetbrains.kotlin:kotlin-android-extensions:1.4.32
8. com.squareup.retrofit2:retrofit:2.6.1
9. com.squareup.retrofit2:converter-gson:2.6.1
10. okhttp:okhttp:4.9.0
11. okio:okio:2.0.0
12. retrofit:retrofit:2.6.1

Please note that the versions of the dependencies may change based on the project's requirements and the latest available versions at the time of writing.

Precision: 0.2
Recall: 0.14285714285714285
F1 Score: 0.16666666666666666

Formatted Dependencies:
com.hannesdorfmann.mosby:viewstate
- com.chrisanderson.mediabrowsercompat:library
- com.raizlabs.android:DBFlow-Compiler
- com.raizlabs.android:DBFlow
- com.hannesdorfmann.mosby:mvp
- com.android.support:mediarouter-v7
- frankiesardo:icepick-processor
 Test Dependencies:
['frankiesardo:icepick', 'com.android.support:appcompat-v7', 'com.android.support:design', 'com.jakewharton:butterknife', 'com.raizlabs.android:DBFlow-Core', 'com.android.support:cardview-v7', 'com.android.support:support-v4']
