<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications. provide recommendations exclusively in the Maven format: groupId:artifactId:version.
    Given the project details below:
    Project Name: patloew/RxLocation
Project Description: The Reactive Location API Library for Android is now deprecated and not maintained anymore. Please switch to the CoLocation library by Micha\xc5\x82 Charmas. This library wraps the Location APIs in RxJava 2.x.
Existing Dependencies Include: org.powermock:powermock-module-junit4
- io.reactivex.rxjava2:rxandroid
- com.squareup.leakcanary:leakcanary-android
- io.reactivex.rxjava2:rxjava
- com.google.android.gms:play-services-location
- com.squareup.leakcanary:leakcanary-android-no-op

Project Name: frankred/jSona
Project Description: JSona is a configuration file(JSON), vcj and JavaFx based music and media player. The aim is to always keep your playlists in synch with your music folders. For fast fulltext search jSona uses Apache Lucene (http://lucene.apache.org/core/).
Existing Dependencies Include: uk.co.caprica:vlcj
- org.apache.lucene:lucene-analyzers-common
- org.apache.lucene:lucene-core
- commons-io:commons-io
- com.mpatric:mp3agic
- org.apache.lucene:lucene-queryparser
- com.github.tulskiy:jkeymaster
- org.apache.commons:commons-lang3

Project Name: querydsl/querydsl
Project Description: Querydsl is a framework which enables the construction of type-safe SQL-like queries for multiple backends including JPA, MongoDB and SQL in Java. Querying JPA and MongoDB using a fluent API.
Existing Dependencies Include: org.springframework:spring-aop
- com.mysema.codegen:codegen
- org.xerial:sqlite-jdbc
- org.springframework:spring-test
- com.google.guava:guava
- com.jolbox:bonecp
- org.hamcrest:hamcrest-library
- com.oracle:ojdbc6
- com.querydsl:querydsl-sql-spatial
- com.google.inject.extensions:guice-persist
- com.querydsl:querydsl-apt
- org.postgresql:postgresql
- org.easymock:easymock
- com.querydsl:querydsl-spatial
- org.hibernate:hibernate-ehcache
- javax.inject:javax.inject
- org.springframework:spring-context
- org.eclipse.persistence:eclipselink
- org.firebirdsql.jdbc:jaybird-jdk16
- log4j:log4j
- org.mongodb.morphia:morphia
- org.hsqldb:hsqldb
- cglib:cglib
- org.apache.lucene:lucene-queryparser
- org.hibernate.javax.persistence:hibernate-jpa-2.0-api
- org.apache.maven:maven-project
- org.hibernate:hibernate-envers
- com.querydsl:querydsl-codegen
- net.sourceforge.jtds:jtds
- org.springframework.roo:org.springframework.roo.annotations
- org.apache.ant:ant
- com.querydsl:querydsl-lucene3
- com.thoughtworks.proxytoys:proxytoys
- org.scala-lang:scala-library
- org.geolatte:geolatte-geom
- com.h2database:h2
- com.querydsl:querydsl-sql-codegen
- org.hibernate:hibernate-annotations
- org.scala-lang:scala-compiler
- org.reflections:reflections
- org.datanucleus:datanucleus-api-jdo
- org.mongodb:mongo-java-driver
- org.hibernate:hibernate-validator
- com.infradna.tool:bridge-method-annotation
- com.querydsl:querydsl-sql-spring
- javax.transaction:jta
- org.slf4j:slf4j-log4j12

Project Name: GoogleCloudPlatform/google-cloud-datastore
Project Description: This repository contains low-level Java and Python client libraries for Google Cloud Datastore. For more idiomatic and usable client libraries in these languages, please visit the [Google Cloud Dataastore Client for Java][java-datastore] and Google Cloud Database Client for Python
Existing Dependencies Include: com.google.http-client:com.google.http-client
- com.google.truth:com.google.truth
- com.google.cloud.datastore:datastore-v1-proto-client
- com.google.guava:com.google.guava
- com.google.api-client:com.google.api-client
- com.google.oauth-client:google-oauth-client
- com.google.truth:truth
- com.google.oauth-client:com.google.oauth-client

Project Name: eclipse/tycho
Project Description: Eclipse Tycho is a manifest-first way to build and build Eclipse plug-ins/OSGi bundles/RCP applications\nï¼Œnwith Maven. This repository contains all the features and documentation that will help you migrate to the official Eclipse site.
Existing Dependencies Include: org.apache.maven.plugin-tools:maven-plugin-annotations
- org.codehaus.plexus:plexus-component-annotations
- org.codehaus.plexus:plexus-container-default
- org.eclipse.tycho:tycho-testing-harness
- org.apache.maven:maven-core
- org.eclipse.tycho:org.eclipse.jdt.compiler.apt
- org.codehaus.plexus:plexus-utils
- org.eclipse.tycho:org.eclipse.osgi
- org.eclipse.tycho:tycho-core
- org.apache.commons:commons-exec
    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Reccomend me some of these libraries that can be added to the project to enhance its capabilities.
    Project Name: docusign/docusign-java-client
    Project Description: The Official DocuSign eSignature Java Client SDK is provided as open source, which enables you to customize its functionality to suit your particular use case. To do so, download or clone the repository.
    Existing Dependencies:
    com.brsanthu:migbase64
- javax.annotation:jsr250-api
- com.sun.jersey:jersey-client
- com.fasterxml.jackson.core:jackson-databind
- com.fasterxml.jackson.datatype:jackson-datatype-joda
- com.sun.jersey.contribs:jersey-multipart
- joda-time:joda-time
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
     Based on the project descriptions provided, here are five library recommendations that can enhance the capabilities of the "docusign/docusign-java-client" project:

1. Apache Commons Lang3: This library provides a collection of reusable utilities for Java programming. It includes functions for working with collections, strings, dates, and more. By adding this library to the project, developers can simplify their code and improve its maintainability. Group ID: org.apache.commons, Artifact ID: commons-lang3, Version: 3.10.0.

2. Joda-Time: This library provides a more convenient and intuitive date and time API for Java. It can help simplify date and time operations in the project, and it is also more efficient than the built-in Java date and time API. Group ID: joda-time, Artifact ID: joda-time, Version: 2.10.0.

3. Jackson Databind: This library provides a flexible and efficient JSON processor for Java. It can help simplify JSON serialization and deserialization in the project, and it is also highly configurable. Group ID: com.fasterxml.jackson.core, Artifact ID: jackson-databind, Version: 2.13.0.

4. Jersey Client: This library provides a high-level client API for making RESTful web service calls in Java. It can help simplify the project's web service integration and provide better support for JSON and XML data. Group ID: com.sun.jersey, Artifact ID: jersey-client, Version: 2.31.1.

5. Guava: This library provides a collection of reusable utilities for Java programming, including functions for working with collections, strings, dates, and more. It can help simplify the project's code and improve its maintainability. Group ID: com.google.guava, Artifact ID: guava, Version: 31.1.1.0.

These libraries can help enhance the project's capabilities, improve performance, and introduce new functionalities relevant to the project's needs. Each library has a strong reputation for stability and reliability, and they are well-documented and widely used in the Java community.
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s> # Maven Dependencies for a Java Web Application

Here are some common Maven dependencies that can be added to a Java web application:

1. Spring Framework:
```xml
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-web</artifactId>
    <version>5.3.10</version>
</dependency>
```
2. Hibernate:
```xml
<dependency>
    <groupId>org.hibernate</groupId>
    <artifactId>hibernate-core</artifactId>
    <version>5.4.32.Final</version>
</dependency>
```
3. MySQL Connector:
```xml
<dependency>
    <groupId>mysql</groupId>
    <artifactId>mysql-connector-java</artifactId>
    <version>8.0.19</version>
</dependency>
```
4. Apache Commons:
```xml
<dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-lang3</artifactId>
    <version>3.10.0</version>
</dependency>
```
5. Guava:
```xml
<dependency>
    <groupId>com.google.guava</groupId>
    <artifactId>guava</artifactId>
    <version>31.1.1.0</version>
</dependency>
```
6. Log4j:
```xml
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>2.17.2</version>
</dependency>
```
7. Jetty:
```xml
<dependency>
    <groupId>org.mortbay.jetty</groupId>
    <artifactId>jetty-servlet</artifactId>
    <version>9.4.2.v20180830</version>
</dependency>
```
8. JSP and Servlet:
```xml
<dependency>
    <groupId>javax.servlet</groupId>
    <artifactId>javax.servlet-api</artifactId>
    <version>4.0.1</version>
</dependency>
```
9. EL and JSTL:
```xml
<dependency>
    <groupId>javax.el</groupId>
    <artifactId>javax.el-api</artifactId>
    <version>3.0.0</version>
</dependency>
```
10. Testing Dependencies:
```xml
<dependency>
    <groupId>junit</groupId>
    <artifactId>junit</artifactId>
    <version>4.13</version>
</dependency>
```
Note that the versions of the dependencies may vary based on the specific requirements of your project.

Precision: 0.2
Recall: 0.14285714285714285
F1 Score: 0.16666666666666666

Formatted Dependencies:
com.brsanthu:migbase64
- javax.annotation:jsr250-api
- com.sun.jersey:jersey-client
- com.fasterxml.jackson.core:jackson-databind
- com.fasterxml.jackson.datatype:jackson-datatype-joda
- com.sun.jersey.contribs:jersey-multipart
- joda-time:joda-time
 Test Dependencies:
['com.auth0:java-jwt', 'com.fasterxml.jackson.core:jackson-annotations', 'com.fasterxml.jackson.core:jackson-core', 'org.apache.oltu.oauth2:org.apache.oltu.oauth2.client', 'io.swagger:swagger-annotations', 'junit:junit', 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider']
