<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications. provide recommendations exclusively in the Maven format: groupId:artifactId:version.
    Given the project details below:
    Project Name: patloew/RxLocation
Project Description: The Reactive Location API Library for Android is now deprecated and not maintained anymore. Please switch to the CoLocation library by Micha\xc5\x82 Charmas. This library wraps the Location APIs in RxJava 2.x.
Existing Dependencies Include: org.powermock:powermock-module-junit4
- io.reactivex.rxjava2:rxandroid
- com.squareup.leakcanary:leakcanary-android
- io.reactivex.rxjava2:rxjava
- com.google.android.gms:play-services-location
- com.squareup.leakcanary:leakcanary-android-no-op

Project Name: frankred/jSona
Project Description: JSona is a configuration file(JSON), vcj and JavaFx based music and media player. The aim is to always keep your playlists in synch with your music folders. For fast fulltext search jSona uses Apache Lucene (http://lucene.apache.org/core/).
Existing Dependencies Include: uk.co.caprica:vlcj
- org.apache.lucene:lucene-analyzers-common
- org.apache.lucene:lucene-core
- commons-io:commons-io
- com.mpatric:mp3agic
- org.apache.lucene:lucene-queryparser
- com.github.tulskiy:jkeymaster
- org.apache.commons:commons-lang3

Project Name: querydsl/querydsl
Project Description: Querydsl is a framework which enables the construction of type-safe SQL-like queries for multiple backends including JPA, MongoDB and SQL in Java. Querying JPA and MongoDB using a fluent API.
Existing Dependencies Include: org.springframework:spring-aop
- com.mysema.codegen:codegen
- org.xerial:sqlite-jdbc
- org.springframework:spring-test
- com.google.guava:guava
- com.jolbox:bonecp
- org.hamcrest:hamcrest-library
- com.oracle:ojdbc6
- com.querydsl:querydsl-sql-spatial
- com.google.inject.extensions:guice-persist
- com.querydsl:querydsl-apt
- org.postgresql:postgresql
- org.easymock:easymock
- com.querydsl:querydsl-spatial
- org.hibernate:hibernate-ehcache
- javax.inject:javax.inject
- org.springframework:spring-context
- org.eclipse.persistence:eclipselink
- org.firebirdsql.jdbc:jaybird-jdk16
- log4j:log4j
- org.mongodb.morphia:morphia
- org.hsqldb:hsqldb
- cglib:cglib
- org.apache.lucene:lucene-queryparser
- org.hibernate.javax.persistence:hibernate-jpa-2.0-api
- org.apache.maven:maven-project
- org.hibernate:hibernate-envers
- com.querydsl:querydsl-codegen
- net.sourceforge.jtds:jtds
- org.springframework.roo:org.springframework.roo.annotations
- org.apache.ant:ant
- com.querydsl:querydsl-lucene3
- com.thoughtworks.proxytoys:proxytoys
- org.scala-lang:scala-library
- org.geolatte:geolatte-geom
- com.h2database:h2
- com.querydsl:querydsl-sql-codegen
- org.hibernate:hibernate-annotations
- org.scala-lang:scala-compiler
- org.reflections:reflections
- org.datanucleus:datanucleus-api-jdo
- org.mongodb:mongo-java-driver
- org.hibernate:hibernate-validator
- com.infradna.tool:bridge-method-annotation
- com.querydsl:querydsl-sql-spring
- javax.transaction:jta
- org.slf4j:slf4j-log4j12

Project Name: GoogleCloudPlatform/google-cloud-datastore
Project Description: This repository contains low-level Java and Python client libraries for Google Cloud Datastore. For more idiomatic and usable client libraries in these languages, please visit the [Google Cloud Dataastore Client for Java][java-datastore] and Google Cloud Database Client for Python
Existing Dependencies Include: com.google.http-client:com.google.http-client
- com.google.truth:com.google.truth
- com.google.cloud.datastore:datastore-v1-proto-client
- com.google.guava:com.google.guava
- com.google.api-client:com.google.api-client
- com.google.oauth-client:google-oauth-client
- com.google.truth:truth
- com.google.oauth-client:com.google.oauth-client

Project Name: eclipse/tycho
Project Description: Eclipse Tycho is a manifest-first way to build and build Eclipse plug-ins/OSGi bundles/RCP applications\n，nwith Maven. This repository contains all the features and documentation that will help you migrate to the official Eclipse site.
Existing Dependencies Include: org.apache.maven.plugin-tools:maven-plugin-annotations
- org.codehaus.plexus:plexus-component-annotations
- org.codehaus.plexus:plexus-container-default
- org.eclipse.tycho:tycho-testing-harness
- org.apache.maven:maven-core
- org.eclipse.tycho:org.eclipse.jdt.compiler.apt
- org.codehaus.plexus:plexus-utils
- org.eclipse.tycho:org.eclipse.osgi
- org.eclipse.tycho:tycho-core
- org.apache.commons:commons-exec
    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Reccomend me some of these libraries that can be added to the project to enhance its capabilities.
    Project Name: jaxio/usi2011
    Project Description: Le Challenge USI 2011 est une compétition du code de l\'\xc3\xa9quipe n\xc2\xb010, dite "Jaxio and friends" dans le site du Challenge.
    Existing Dependencies:
    mx4j:mx4j-tools
- commons-io:commons-io
- xom:xom
- me.prettyprint:hector-core
- org.slf4j:slf4j-api
- oro:oro
- org.mockito:mockito-all
- commons-codec:commons-codec
- cglib:cglib-nodep
- org.springframework:spring-test
- org.twitter4j:twitter4j-core
- org.jboss.netty:netty
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
     Based on the project descriptions and dependencies, here are five Maven library recommendations that could enhance the capabilities of the project:

1. org.springframework.data:spring-data - This library provides a consistent and simple API for data access and can help improve the project's data access and management capabilities. It is already a depended upon library in the project, but adding it as a separate dependency may help simplify data access code and improve performance.
2. org.springframework.boot:spring-boot-starter-web - This library provides a web application starter for Spring Boot and can help improve the project's web application capabilities. It includes features like embedded Tomcat, RESTful APIs, and more. Adding this library can help simplify web application development and improve performance.
3. com.google.code.findbugs:jsr305 - This library provides annotations for finding and preventing bugs in Java code and can help improve the project's code quality and stability. It is already a depended upon library in the project, but adding it as a separate dependency may help catch more bugs and improve code reliability.
4. org.mockito:mockito-core - This library provides a simple and efficient way to create mock objects and can help improve the project's unit testing capabilities. It is already a depended upon library in the project, but adding it as a separate dependency may help simplify mock object creation and improve test coverage.
5. com.github.tomakehurst:wiremock - This library provides a simple and flexible API for mocking HTTP requests and can help improve the project's unit testing capabilities. It can be used to mock HTTP requests and responses, making it easier to test web application code. Adding this library can help simplify unit testing and improve code coverage.

Each of these libraries can help enhance the project's capabilities and improve performance. However, it is essential to carefully consider the project's specific needs and dependencies before adding any new libraries to ensure they do not cause conflicts or compatibility issues.
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s> # Maven Dependencies

Here are the Maven dependencies required for each project:

1. **pom.xml**:
```xml
<dependencies>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>5.3.10</version>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>5.3.10</version>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>5.3.10</version>
    </dependency>
    <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>2.28.0</version>
    </dependency>
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>5.7.2</version>
    </dependency>
</dependencies>
```
2. **pom.xml** (with Spring Boot):
```xml
<dependencies>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
    </dependency>
    <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
    </dependency>
</dependencies>
```
3. **pom.xml** (with Spring Data JPA):
```xml
<dependencies>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
    </dependency>
    <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
    </dependency>
</dependencies>
```
4. **pom.xml** (with Spring Security):
```xml
<dependencies>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
    </dependency>
    <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
    </dependency>
</dependencies>
```
5. **pom.xml** (with Spring Cloud):
```xml
<dependencies>
    <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-web</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-test</artifactId>
    </dependency>
    <

Precision: 0.2
Recall: 0.08333333333333333
F1 Score: 0.11764705882352941

Formatted Dependencies:
mx4j:mx4j-tools
- commons-io:commons-io
- xom:xom
- me.prettyprint:hector-core
- org.slf4j:slf4j-api
- oro:oro
- org.mockito:mockito-all
- commons-codec:commons-codec
- cglib:cglib-nodep
- org.springframework:spring-test
- org.twitter4j:twitter4j-core
- org.jboss.netty:netty
 Test Dependencies:
['com.jayway.awaitility:awaitility', 'org.springframework:spring-context', 'com.jayway.restassured:rest-assured', 'org.slf4j:slf4j-log4j12', 'org.apache.cassandra:cassandra-javautils', 'org.apache.cassandra:cassandra-all', 'org.easytesting:fest-assert', 'log4j:log4j', 'org.codehaus.groovy:groovy', 'org.json:json', 'junit:junit', 'commons-validator:commons-validator']
