<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications. provide recommendations exclusively in the Maven format: groupId:artifactId:version.
    Given the project details below:
    Project Name: patloew/RxLocation
Project Description: The Reactive Location API Library for Android is now deprecated and not maintained anymore. Please switch to the CoLocation library by Micha\xc5\x82 Charmas. This library wraps the Location APIs in RxJava 2.x.
Existing Dependencies Include: org.powermock:powermock-module-junit4
- io.reactivex.rxjava2:rxandroid
- com.squareup.leakcanary:leakcanary-android
- io.reactivex.rxjava2:rxjava
- com.google.android.gms:play-services-location
- com.squareup.leakcanary:leakcanary-android-no-op

Project Name: frankred/jSona
Project Description: JSona is a configuration file(JSON), vcj and JavaFx based music and media player. The aim is to always keep your playlists in synch with your music folders. For fast fulltext search jSona uses Apache Lucene (http://lucene.apache.org/core/).
Existing Dependencies Include: uk.co.caprica:vlcj
- org.apache.lucene:lucene-analyzers-common
- org.apache.lucene:lucene-core
- commons-io:commons-io
- com.mpatric:mp3agic
- org.apache.lucene:lucene-queryparser
- com.github.tulskiy:jkeymaster
- org.apache.commons:commons-lang3

Project Name: querydsl/querydsl
Project Description: Querydsl is a framework which enables the construction of type-safe SQL-like queries for multiple backends including JPA, MongoDB and SQL in Java. Querying JPA and MongoDB using a fluent API.
Existing Dependencies Include: org.springframework:spring-aop
- com.mysema.codegen:codegen
- org.xerial:sqlite-jdbc
- org.springframework:spring-test
- com.google.guava:guava
- com.jolbox:bonecp
- org.hamcrest:hamcrest-library
- com.oracle:ojdbc6
- com.querydsl:querydsl-sql-spatial
- com.google.inject.extensions:guice-persist
- com.querydsl:querydsl-apt
- org.postgresql:postgresql
- org.easymock:easymock
- com.querydsl:querydsl-spatial
- org.hibernate:hibernate-ehcache
- javax.inject:javax.inject
- org.springframework:spring-context
- org.eclipse.persistence:eclipselink
- org.firebirdsql.jdbc:jaybird-jdk16
- log4j:log4j
- org.mongodb.morphia:morphia
- org.hsqldb:hsqldb
- cglib:cglib
- org.apache.lucene:lucene-queryparser
- org.hibernate.javax.persistence:hibernate-jpa-2.0-api
- org.apache.maven:maven-project
- org.hibernate:hibernate-envers
- com.querydsl:querydsl-codegen
- net.sourceforge.jtds:jtds
- org.springframework.roo:org.springframework.roo.annotations
- org.apache.ant:ant
- com.querydsl:querydsl-lucene3
- com.thoughtworks.proxytoys:proxytoys
- org.scala-lang:scala-library
- org.geolatte:geolatte-geom
- com.h2database:h2
- com.querydsl:querydsl-sql-codegen
- org.hibernate:hibernate-annotations
- org.scala-lang:scala-compiler
- org.reflections:reflections
- org.datanucleus:datanucleus-api-jdo
- org.mongodb:mongo-java-driver
- org.hibernate:hibernate-validator
- com.infradna.tool:bridge-method-annotation
- com.querydsl:querydsl-sql-spring
- javax.transaction:jta
- org.slf4j:slf4j-log4j12

Project Name: GoogleCloudPlatform/google-cloud-datastore
Project Description: This repository contains low-level Java and Python client libraries for Google Cloud Datastore. For more idiomatic and usable client libraries in these languages, please visit the [Google Cloud Dataastore Client for Java][java-datastore] and Google Cloud Database Client for Python
Existing Dependencies Include: com.google.http-client:com.google.http-client
- com.google.truth:com.google.truth
- com.google.cloud.datastore:datastore-v1-proto-client
- com.google.guava:com.google.guava
- com.google.api-client:com.google.api-client
- com.google.oauth-client:google-oauth-client
- com.google.truth:truth
- com.google.oauth-client:com.google.oauth-client

Project Name: eclipse/tycho
Project Description: Eclipse Tycho is a manifest-first way to build and build Eclipse plug-ins/OSGi bundles/RCP applications\nï¼Œnwith Maven. This repository contains all the features and documentation that will help you migrate to the official Eclipse site.
Existing Dependencies Include: org.apache.maven.plugin-tools:maven-plugin-annotations
- org.codehaus.plexus:plexus-component-annotations
- org.codehaus.plexus:plexus-container-default
- org.eclipse.tycho:tycho-testing-harness
- org.apache.maven:maven-core
- org.eclipse.tycho:org.eclipse.jdt.compiler.apt
- org.codehaus.plexus:plexus-utils
- org.eclipse.tycho:org.eclipse.osgi
- org.eclipse.tycho:tycho-core
- org.apache.commons:commons-exec
    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Reccomend me some of these libraries that can be added to the project to enhance its capabilities.
    Project Name: spring-projects/spring-data-mongodb
    Project Description: Spring Data MongoDB project aims to provide a familiar and consistent Spring-based programming model for new datastores while retaining store-specific features and capabilities. For more information, visit https://github.com/spring-data/Spring-Data MongoDB
    Existing Dependencies:
    io.projectreactor:reactor-core
- org.hibernate:hibernate-entitymanager
- org.threeten:threetenbp
- org.springframework:spring-aspects
- com.querydsl:querydsl-mongodb
- org.objenesis:objenesis
- com.nhaarman:mockito-kotlin
- io.projectreactor:reactor-test
- org.apache.openwebbeans:openwebbeans-se
- ${project.groupId}:spring-data-commons
- org.slf4j:jul-to-slf4j
- org.jetbrains.kotlin:kotlin-stdlib
- javax.annotation:jsr250-api
- io.reactivex.rxjava2:rxjava
- de.schauderhaft.degraph:degraph-check
- hsqldb:hsqldb
- javax.annotation:javax.annotation-api
- org.apache.geronimo.specs:geronimo-jcdi_2.0_spec
- joda-time:joda-time
- org.springframework:spring-core
- org.eclipse.persistence:javax.persistence
- nl.jqno.equalsverifier:equalsverifier
- junit:junit
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
     As an AI specializing in software library recommendations for Java applications, I would suggest the following five libraries to enhance the capabilities of the spring-projects/spring-data-mongodb project:

1. org.springframework.data:spring-data-mongodb-testing: This library provides a comprehensive testing framework for Spring Data MongoDB, allowing developers to write unit tests and integration tests for their MongoDB-based applications. With this library, developers can ensure their code is robust and functions as expected, leading to better application performance and reliability.

2. io.github.jhipster:jhipster-needle: This library provides a set of reactive, non-blocking web services for Spring-based applications. By incorporating this library into the project, developers can leverage the benefits of reactive programming, such as improved responsiveness and better performance under high loads.

3. com.github.ben-manes.caffeine:caffeine: This library provides a high-performance, low-latency caching layer for Java applications. By adding this library to the project, developers can improve the performance of their application by reducing the number of database queries and other expensive operations.

4. org.projectlombok:lombok: This library provides a set of annotations and utilities for generating boilerplate code in Java. By using this library, developers can reduce the amount of code they need to write, leading to faster development times and fewer errors.

5. org.springframework.boot:spring-boot-starter-data-jpa: This library provides a set of tools and features for building data-driven applications using Spring Boot. By incorporating this library into the project, developers can simplify the process of building and deploying data-driven applications, leading to faster time-to-market and improved productivity.

In summary, these five libraries offer a range of benefits for the spring-projects/spring-data-mongodb project, including improved testing, reactive programming, caching, code generation, and data-driven application development. By incorporating these libraries into the project, developers can enhance the capabilities of their application and improve its overall performance and reliability.
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s> # Maven Dependencies

Here are the Maven dependencies required for the project:

* org.springframework.boot:spring-boot-starter-data-jpa:2.3.4.RELEASE
* org.springframework.boot:spring-boot-starter-web:2.3.4.RELEASE
* org.springframework.boot:spring-boot-starter-test:2.3.4.RELEASE
* org.hibernate:hibernate-core:5.4.20.Final
* org.hibernate:hibernate-entitymanager:5.4.20.Final
* org.slf4j:slf4j-log4j12:1.7.25
* org.springframework.boot:spring-boot-starter-log4j2:2.3.4.RELEASE
* com.querydsl:querydsl-apt:4.2.0
* com.querydsl:querydsl-sql:4.2.0

Please note that the versions of the dependencies may vary based on the Spring Boot version you are using. It's always a good idea to check the official documentation for the latest versions of the dependencies.

Precision: 0.2
Recall: 0.041666666666666664
F1 Score: 0.06896551724137931

Formatted Dependencies:
io.projectreactor:reactor-core
- org.hibernate:hibernate-entitymanager
- org.threeten:threetenbp
- org.springframework:spring-aspects
- com.querydsl:querydsl-mongodb
- org.objenesis:objenesis
- com.nhaarman:mockito-kotlin
- io.projectreactor:reactor-test
- org.apache.openwebbeans:openwebbeans-se
- ${project.groupId}:spring-data-commons
- org.slf4j:jul-to-slf4j
- org.jetbrains.kotlin:kotlin-stdlib
- javax.annotation:jsr250-api
- io.reactivex.rxjava2:rxjava
- de.schauderhaft.degraph:degraph-check
- hsqldb:hsqldb
- javax.annotation:javax.annotation-api
- org.apache.geronimo.specs:geronimo-jcdi_2.0_spec
- joda-time:joda-time
- org.springframework:spring-core
- org.eclipse.persistence:javax.persistence
- nl.jqno.equalsverifier:equalsverifier
- junit:junit
 Test Dependencies:
['org.aspectj:aspectjrt', 'com.querydsl:querydsl-apt', 'org.springframework:spring-tx', 'org.springframework:spring-expression', 'javax.interceptor:javax.interceptor-api', 'org.springframework:spring-webmvc', 'org.jetbrains.kotlin:kotlin-test', '${project.groupId}:spring-data-mongodb', 'org.mongodb:mongo-java-driver', 'org.springframework:spring-context', 'io.reactivex:rxjava-reactive-streams', 'javax.validation:validation-api', 'org.hibernate:hibernate-validator', 'org.mongodb:mongodb-driver-reactivestreams', 'org.springframework:spring-beans', 'org.jetbrains.kotlin:kotlin-reflect', 'org.springframework:spring-orm', 'com.fasterxml.jackson.core:jackson-databind', 'org.springframework.data:spring-data-mongodb', 'javax.enterprise:cdi-api', 'org.openjdk.jmh:jmh-generator-annprocess', 'org.mongodb:mongodb-driver-async', 'org.openjdk.jmh:jmh-core', 'io.reactivex:rxjava']
