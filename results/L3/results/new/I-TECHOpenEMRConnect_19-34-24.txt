<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications. provide recommendations exclusively in the Maven format: groupId:artifactId:version.
    Given the project details below:
    Project Name: patloew/RxLocation
Project Description: The Reactive Location API Library for Android is now deprecated and not maintained anymore. Please switch to the CoLocation library by Micha\xc5\x82 Charmas. This library wraps the Location APIs in RxJava 2.x.
Existing Dependencies Include: org.powermock:powermock-module-junit4
- io.reactivex.rxjava2:rxandroid
- com.squareup.leakcanary:leakcanary-android
- io.reactivex.rxjava2:rxjava
- com.google.android.gms:play-services-location
- com.squareup.leakcanary:leakcanary-android-no-op

Project Name: frankred/jSona
Project Description: JSona is a configuration file(JSON), vcj and JavaFx based music and media player. The aim is to always keep your playlists in synch with your music folders. For fast fulltext search jSona uses Apache Lucene (http://lucene.apache.org/core/).
Existing Dependencies Include: uk.co.caprica:vlcj
- org.apache.lucene:lucene-analyzers-common
- org.apache.lucene:lucene-core
- commons-io:commons-io
- com.mpatric:mp3agic
- org.apache.lucene:lucene-queryparser
- com.github.tulskiy:jkeymaster
- org.apache.commons:commons-lang3

Project Name: querydsl/querydsl
Project Description: Querydsl is a framework which enables the construction of type-safe SQL-like queries for multiple backends including JPA, MongoDB and SQL in Java. Querying JPA and MongoDB using a fluent API.
Existing Dependencies Include: org.springframework:spring-aop
- com.mysema.codegen:codegen
- org.xerial:sqlite-jdbc
- org.springframework:spring-test
- com.google.guava:guava
- com.jolbox:bonecp
- org.hamcrest:hamcrest-library
- com.oracle:ojdbc6
- com.querydsl:querydsl-sql-spatial
- com.google.inject.extensions:guice-persist
- com.querydsl:querydsl-apt
- org.postgresql:postgresql
- org.easymock:easymock
- com.querydsl:querydsl-spatial
- org.hibernate:hibernate-ehcache
- javax.inject:javax.inject
- org.springframework:spring-context
- org.eclipse.persistence:eclipselink
- org.firebirdsql.jdbc:jaybird-jdk16
- log4j:log4j
- org.mongodb.morphia:morphia
- org.hsqldb:hsqldb
- cglib:cglib
- org.apache.lucene:lucene-queryparser
- org.hibernate.javax.persistence:hibernate-jpa-2.0-api
- org.apache.maven:maven-project
- org.hibernate:hibernate-envers
- com.querydsl:querydsl-codegen
- net.sourceforge.jtds:jtds
- org.springframework.roo:org.springframework.roo.annotations
- org.apache.ant:ant
- com.querydsl:querydsl-lucene3
- com.thoughtworks.proxytoys:proxytoys
- org.scala-lang:scala-library
- org.geolatte:geolatte-geom
- com.h2database:h2
- com.querydsl:querydsl-sql-codegen
- org.hibernate:hibernate-annotations
- org.scala-lang:scala-compiler
- org.reflections:reflections
- org.datanucleus:datanucleus-api-jdo
- org.mongodb:mongo-java-driver
- org.hibernate:hibernate-validator
- com.infradna.tool:bridge-method-annotation
- com.querydsl:querydsl-sql-spring
- javax.transaction:jta
- org.slf4j:slf4j-log4j12

Project Name: GoogleCloudPlatform/google-cloud-datastore
Project Description: This repository contains low-level Java and Python client libraries for Google Cloud Datastore. For more idiomatic and usable client libraries in these languages, please visit the [Google Cloud Dataastore Client for Java][java-datastore] and Google Cloud Database Client for Python
Existing Dependencies Include: com.google.http-client:com.google.http-client
- com.google.truth:com.google.truth
- com.google.cloud.datastore:datastore-v1-proto-client
- com.google.guava:com.google.guava
- com.google.api-client:com.google.api-client
- com.google.oauth-client:google-oauth-client
- com.google.truth:truth
- com.google.oauth-client:com.google.oauth-client

Project Name: eclipse/tycho
Project Description: Eclipse Tycho is a manifest-first way to build and build Eclipse plug-ins/OSGi bundles/RCP applications\nï¼Œnwith Maven. This repository contains all the features and documentation that will help you migrate to the official Eclipse site.
Existing Dependencies Include: org.apache.maven.plugin-tools:maven-plugin-annotations
- org.codehaus.plexus:plexus-component-annotations
- org.codehaus.plexus:plexus-container-default
- org.eclipse.tycho:tycho-testing-harness
- org.apache.maven:maven-core
- org.eclipse.tycho:org.eclipse.jdt.compiler.apt
- org.codehaus.plexus:plexus-utils
- org.eclipse.tycho:org.eclipse.osgi
- org.eclipse.tycho:tycho-core
- org.apache.commons:commons-exec
    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Reccomend me some of these libraries that can be added to the project to enhance its capabilities.
    Project Name: I-TECH/OpenEMRConnect
    Project Description: OpenEMRConnect\nInterconnect Electronic Medical Records systems to each other and to other systems\n\nThis Repository is now defunct as of June 15, 2015. Each of the modules it contains\nhave been moved to their own individual repositories under their respective names
    Existing Dependencies:
    net.sf.opencsv:opencsv
- mysql:mysql-connector-java
- org.postgresql:postgresql
- ${project.groupId}:fingerprintmanager
- commons-codec:commons-codec
- javax.ws.rs:jsr311-api
- net.java.dev.swing-layout:swing-layout
- org.jdesktop:appframework
- org.springframework:spring-webmvc
- gria:griaule
- org.apache.geronimo.bundles:commons-httpclient
- net.sourceforge.jtds:jtds
- ${project.groupId}:oeclib
- org.springframework:spring-context
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
     As an AI specializing in software library recommendations for Java applications, I can provide recommendations exclusively in the Maven format. Based on the project context and existing dependencies, I suggest the following five libraries to enhance the capabilities of the I-TECH/OpenEMRConnect project:

1. org.springframework.boot:spring-boot-starter-data-jpa - This library provides a simple and consistent JPA (Java Persistence API) framework for data access and object-relational mapping. It simplifies the configuration and use of JPA, making it easier to focus on the application's business logic.
2. org.springframework.boot:spring-boot-starter-security - This library provides a comprehensive security framework for securing Spring Boot applications. It includes support for authentication, authorization, and encryption, ensuring the project's data and user information are protected.
3. com.google.guava:guava - This library provides a set of libraries and tools for working with Java collections, caching, and other common data structures. It includes features like immutable collections, multimaps, and more, which can help improve the project's performance and code readability.
4. org.hibernate:hibernate-envers - This library provides a powerful auditing and history tracking system for Hibernate applications. It allows you to track changes to entities and their associations, providing a complete audit trail of all changes made to the data.
5. org.projectlombok:lombok - This library provides a set of annotations and utilities for generating boilerplate code, improving code readability, and reducing the amount of code needed for common tasks. It can help simplify the project's codebase and reduce the risk of errors.

These libraries can enhance the project's capabilities in various ways, such as simplifying data access and object-relational mapping, securing the application, improving performance and code readability, and providing auditing and history tracking. By adding these libraries, the I-TECH/OpenEMRConnect project can benefit from improved functionality, security, and maintainability.
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s> # Maven Dependencies

Here are the Maven dependencies required for the project:

1. Spring Web:
```xml
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-web</artifactId>
    <version>5.3.10</version>
</dependency>
```
2. Spring Data JPA:
```xml
<dependency>
    <groupId>org.springframework.data</groupId>
    <artifactId>spring-data-jpa</artifactId>
    <version>2.6.3</version>
</dependency>
```
3. Hibernate:
```xml
<dependency>
    <groupId>org.hibernate</groupId>
    <artifactId>hibernate-core</artifactId>
    <version>5.4.32.Final</version>
</dependency>
```
4. MySQL Connector:
```xml
<dependency>
    <groupId>mysql</groupId>
    <artifactId>mysql-connector-java</artifactId>
    <version>8.0.19</version>
</dependency>
```
5. Spring Security:
```xml
<dependency>
    <groupId>org.springframework.security</groupId>
    <artifactId>spring-security-web</artifactId>
    <version>5.5.0</version>
</dependency>
```
6. Log4j2:
```xml
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>2.17.1</version>
</dependency>
```
7. Guava:
```xml
<dependency>
    <groupId>com.google.guava</groupId>
    <artifactId>guava</artifactId>
    <version>31.0.1-jre</version>
</dependency>
```
8. Jackson:
```xml
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>2.13.2</version>
</dependency>
```
9. Joda-Time:
```xml
<dependency>
    <groupId>joda-time</groupId>
    <artifactId>joda-time</artifactId>
    <version>2.10.1</version>
</dependency>
```
10. Apache Commons Lang:
```xml
<dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-lang3</artifactId>
    <version>3.10.2</version>
</dependency>
```
These dependencies are required for the project and can be added to the `pom.xml` file.

Precision: 0.2
Recall: 0.07142857142857142
F1 Score: 0.10526315789473682

Formatted Dependencies:
net.sf.opencsv:opencsv
- mysql:mysql-connector-java
- org.postgresql:postgresql
- ${project.groupId}:fingerprintmanager
- commons-codec:commons-codec
- javax.ws.rs:jsr311-api
- net.java.dev.swing-layout:swing-layout
- org.jdesktop:appframework
- org.springframework:spring-webmvc
- gria:griaule
- org.apache.geronimo.bundles:commons-httpclient
- net.sourceforge.jtds:jtds
- ${project.groupId}:oeclib
- org.springframework:spring-context
 Test Dependencies:
['griaule:griaule', 'javax.xml.bind:jaxb-api', 'ke.go.moh.oec:oeclib', '${project.groupId}:oecsm', 'org.jdesktop:beansbinding', 'com.toedter:jcalendar', 'org.springframework:spring-web', 'org.springframework:spring-webflow', 'javax.servlet:jstl', 'com.sun.xml.bind:jaxb-impl', 'org.apache.derby:derby', 'org.apache.tomcat:servlet-api', 'ke.co.idadi:griaulefingerprintmanager', 'junit:junit']
