<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications. provide recommendations exclusively in the Maven format: groupId:artifactId:version.
    Given the project details below:
    Project Name: patloew/RxLocation
Project Description: The Reactive Location API Library for Android is now deprecated and not maintained anymore. Please switch to the CoLocation library by Micha\xc5\x82 Charmas. This library wraps the Location APIs in RxJava 2.x.
Existing Dependencies Include: org.powermock:powermock-module-junit4
- io.reactivex.rxjava2:rxandroid
- com.squareup.leakcanary:leakcanary-android
- io.reactivex.rxjava2:rxjava
- com.google.android.gms:play-services-location
- com.squareup.leakcanary:leakcanary-android-no-op

Project Name: frankred/jSona
Project Description: JSona is a configuration file(JSON), vcj and JavaFx based music and media player. The aim is to always keep your playlists in synch with your music folders. For fast fulltext search jSona uses Apache Lucene (http://lucene.apache.org/core/).
Existing Dependencies Include: uk.co.caprica:vlcj
- org.apache.lucene:lucene-analyzers-common
- org.apache.lucene:lucene-core
- commons-io:commons-io
- com.mpatric:mp3agic
- org.apache.lucene:lucene-queryparser
- com.github.tulskiy:jkeymaster
- org.apache.commons:commons-lang3

Project Name: querydsl/querydsl
Project Description: Querydsl is a framework which enables the construction of type-safe SQL-like queries for multiple backends including JPA, MongoDB and SQL in Java. Querying JPA and MongoDB using a fluent API.
Existing Dependencies Include: org.springframework:spring-aop
- com.mysema.codegen:codegen
- org.xerial:sqlite-jdbc
- org.springframework:spring-test
- com.google.guava:guava
- com.jolbox:bonecp
- org.hamcrest:hamcrest-library
- com.oracle:ojdbc6
- com.querydsl:querydsl-sql-spatial
- com.google.inject.extensions:guice-persist
- com.querydsl:querydsl-apt
- org.postgresql:postgresql
- org.easymock:easymock
- com.querydsl:querydsl-spatial
- org.hibernate:hibernate-ehcache
- javax.inject:javax.inject
- org.springframework:spring-context
- org.eclipse.persistence:eclipselink
- org.firebirdsql.jdbc:jaybird-jdk16
- log4j:log4j
- org.mongodb.morphia:morphia
- org.hsqldb:hsqldb
- cglib:cglib
- org.apache.lucene:lucene-queryparser
- org.hibernate.javax.persistence:hibernate-jpa-2.0-api
- org.apache.maven:maven-project
- org.hibernate:hibernate-envers
- com.querydsl:querydsl-codegen
- net.sourceforge.jtds:jtds
- org.springframework.roo:org.springframework.roo.annotations
- org.apache.ant:ant
- com.querydsl:querydsl-lucene3
- com.thoughtworks.proxytoys:proxytoys
- org.scala-lang:scala-library
- org.geolatte:geolatte-geom
- com.h2database:h2
- com.querydsl:querydsl-sql-codegen
- org.hibernate:hibernate-annotations
- org.scala-lang:scala-compiler
- org.reflections:reflections
- org.datanucleus:datanucleus-api-jdo
- org.mongodb:mongo-java-driver
- org.hibernate:hibernate-validator
- com.infradna.tool:bridge-method-annotation
- com.querydsl:querydsl-sql-spring
- javax.transaction:jta
- org.slf4j:slf4j-log4j12

Project Name: GoogleCloudPlatform/google-cloud-datastore
Project Description: This repository contains low-level Java and Python client libraries for Google Cloud Datastore. For more idiomatic and usable client libraries in these languages, please visit the [Google Cloud Dataastore Client for Java][java-datastore] and Google Cloud Database Client for Python
Existing Dependencies Include: com.google.http-client:com.google.http-client
- com.google.truth:com.google.truth
- com.google.cloud.datastore:datastore-v1-proto-client
- com.google.guava:com.google.guava
- com.google.api-client:com.google.api-client
- com.google.oauth-client:google-oauth-client
- com.google.truth:truth
- com.google.oauth-client:com.google.oauth-client

Project Name: eclipse/tycho
Project Description: Eclipse Tycho is a manifest-first way to build and build Eclipse plug-ins/OSGi bundles/RCP applications\nï¼Œnwith Maven. This repository contains all the features and documentation that will help you migrate to the official Eclipse site.
Existing Dependencies Include: org.apache.maven.plugin-tools:maven-plugin-annotations
- org.codehaus.plexus:plexus-component-annotations
- org.codehaus.plexus:plexus-container-default
- org.eclipse.tycho:tycho-testing-harness
- org.apache.maven:maven-core
- org.eclipse.tycho:org.eclipse.jdt.compiler.apt
- org.codehaus.plexus:plexus-utils
- org.eclipse.tycho:org.eclipse.osgi
- org.eclipse.tycho:tycho-core
- org.apache.commons:commons-exec
    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Reccomend me some of these libraries that can be added to the project to enhance its capabilities.
    Project Name: GoogleCloudPlatform/google-cloud-java
    Project Description: Java idiomatic client for Google Cloud Platform services. Examples of libraries are available on GitHub and Maven Central for developing Java applications that interact with individual Google Cloud services.  https://github.com/googleapis/google-cloud-java/
    Existing Dependencies:
    com.google.api.grpc:grpc-google-cloud-dlp-v2beta1
- com.google.auto.value:auto-value
- com.google.api.grpc:grpc-google-cloud-bigtable-admin-v2
- com.google.api.grpc:grpc-google-cloud-bigtable-v2
- com.google.code.findbugs:jsr305
- io.netty:netty-tcnative-boringssl-static
- org.mockito:mockito-all
- io.grpc:grpc-stub
- com.google.http-client:google-http-client-appengine
- com.google.api.grpc:grpc-google-cloud-error-reporting-v1beta1
- com.google.protobuf:protobuf-java
- com.google.cloud:google-cloud-logging
- com.google.appengine:appengine-api-1.0-sdk
- ${project.groupId}:google-cloud-core
- com.google.api.grpc:grpc-google-cloud-container-v1
- com.google.api.grpc:proto-google-cloud-error-reporting-v1beta1
- com.google.cloud:google-cloud-core
- com.google.api.grpc:grpc-google-cloud-dialogflow-v2beta1
- com.google.protobuf:protobuf-java-util
- org.objenesis:objenesis
- com.google.guava:guava
- ${project.groupId}:google-cloud-vision
- com.google.api.grpc:proto-google-cloud-dlp-v2beta1
- com.google.auto.service:auto-service
- com.google.api.grpc:proto-google-cloud-dialogflow-v2beta1
- com.google.cloud.datastore:datastore-v1-proto-client
- io.grpc:grpc-netty
- ${project.groupId}:google-cloud-nio
- ${project.groupId}:google-cloud-datastore
- com.google.oauth-client:google-oauth-client
- joda-time:joda-time
- com.google.truth:truth
- com.google.guava:guava-testlib
- ${project.groupId}:google-cloud-monitoring
- com.google.apis:google-api-services-dns
- com.google.api:gax
- io.grpc:grpc-auth
- org.json:json
- junit:junit
- ${project.groupId}:google-cloud-managedtest
- ${project.groupId}:google-cloud-compute
- com.google.api.grpc:proto-google-cloud-firestore-v1beta1
- ${project.groupId}:google-cloud-resourcemanager
- ${project.groupId}:google-cloud-errorreporting
- ${project.groupId}:google-cloud-core-grpc
- com.google.api.grpc:grpc-google-iam-v1
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
     Sure, based on the project description and existing dependencies, here are five libraries that could be added to enhance the project's capabilities:

1. com.querydsl:querydsl-sql-spatial: This library provides spatial query capabilities for JPA-based queries, which could be useful for projects that involve geospatial data. By adding this library, the project can take advantage of spatial query functionality, leading to improved performance and better data analysis.

2. org.apache.lucene:lucene-queryparser: This library provides a query parser for full-text search, which could be useful for projects that involve search functionality. By adding this library, the project can take advantage of Lucene's powerful full-text search capabilities, leading to improved search functionality and better data analysis.

3. commons-codec:commons-codec: This library provides a collection of encoding and decoding utilities for various data formats, which could be useful for projects that involve data serialization and deserialization. By adding this library, the project can take advantage of the library's encoding and decoding capabilities, leading to improved data processing and serialization.

4. com.google.code.findbugs:jsr305: This library provides annotations for finding and diagnosing bugs in Java code, which could be useful for projects that involve bug detection and diagnosis. By adding this library, the project can take advantage of FindBugs' annotation capabilities, leading to improved code quality and reduced bug rates.

5. org.springframework.data:spring-data-jpa: This library provides a data access framework for JPA-based applications, which could be useful for projects that involve data access and persistence. By adding this library, the project can take advantage of Spring Data's powerful data access capabilities, leading to improved data access and persistence functionality.

In conclusion, adding these libraries can enhance the project's capabilities, improve performance, and introduce new functionalities relevant to the project's needs. These libraries are well-maintained, widely used, and have a low risk of introducing breaking changes or compatibility issues.
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s> # Maven Dependencies

Here are the Maven dependencies required for the project:

* commons-codec:commons-codec:1.10
* commons-io:commons-io:2.4
* guava:guava:28.1-jre
* jackson:jackson-databind:2.12.2
* joda-time:joda-time:2.9.9
* log4j:log4j:1.2.17
* org.hibernate:hibernate-core:5.4.32.Final
* org.hibernate.javax.persistence:hibernate-jpa-2.2-api-1.0.0.Final
* org.json:json:20180813
* org.mockito:mockito-core:3.10.3
* org.powermock:powermock-api-mockito:2.0.3
* org.powermock:powermock-module-junit-common:2.0.3
* org.powermock:powermock-module-junit-rule-common:2.0.3
* org.springframework:spring-context:5.3.10.Final
* org.springframework:spring-core:5.3.10.Final
* org.springframework:spring-web:5.3.10.Final
* org.springframework:spring-webmvc:5.3.10.Final
* org.testng:testng:6.14.3

Note that some of these dependencies may already be included in your project's build path, so you may not need to add them all. Also, the versions of the dependencies may need to be updated based on your project's requirements and the versions of the other dependencies.

Precision: 0.2
Recall: 0.021739130434782608
F1 Score: 0.0392156862745098

Formatted Dependencies:
com.google.api.grpc:grpc-google-cloud-dlp-v2beta1
- com.google.auto.value:auto-value
- com.google.api.grpc:grpc-google-cloud-bigtable-admin-v2
- com.google.api.grpc:grpc-google-cloud-bigtable-v2
- com.google.code.findbugs:jsr305
- io.netty:netty-tcnative-boringssl-static
- org.mockito:mockito-all
- io.grpc:grpc-stub
- com.google.http-client:google-http-client-appengine
- com.google.api.grpc:grpc-google-cloud-error-reporting-v1beta1
- com.google.protobuf:protobuf-java
- com.google.cloud:google-cloud-logging
- com.google.appengine:appengine-api-1.0-sdk
- ${project.groupId}:google-cloud-core
- com.google.api.grpc:grpc-google-cloud-container-v1
- com.google.api.grpc:proto-google-cloud-error-reporting-v1beta1
- com.google.cloud:google-cloud-core
- com.google.api.grpc:grpc-google-cloud-dialogflow-v2beta1
- com.google.protobuf:protobuf-java-util
- org.objenesis:objenesis
- com.google.guava:guava
- ${project.groupId}:google-cloud-vision
- com.google.api.grpc:proto-google-cloud-dlp-v2beta1
- com.google.auto.service:auto-service
- com.google.api.grpc:proto-google-cloud-dialogflow-v2beta1
- com.google.cloud.datastore:datastore-v1-proto-client
- io.grpc:grpc-netty
- ${project.groupId}:google-cloud-nio
- ${project.groupId}:google-cloud-datastore
- com.google.oauth-client:google-oauth-client
- joda-time:joda-time
- com.google.truth:truth
- com.google.guava:guava-testlib
- ${project.groupId}:google-cloud-monitoring
- com.google.apis:google-api-services-dns
- com.google.api:gax
- io.grpc:grpc-auth
- org.json:json
- junit:junit
- ${project.groupId}:google-cloud-managedtest
- ${project.groupId}:google-cloud-compute
- com.google.api.grpc:proto-google-cloud-firestore-v1beta1
- ${project.groupId}:google-cloud-resourcemanager
- ${project.groupId}:google-cloud-errorreporting
- ${project.groupId}:google-cloud-core-grpc
- com.google.api.grpc:grpc-google-iam-v1
 Test Dependencies:
['org.easymock:easymock', 'com.google.api.grpc:grpc-google-cloud-bigquerydatatransfer-v1', 'com.google.api:api-common', '${project.groupId}:google-cloud-bigquery', '${project.groupId}:google-cloud-speech', '${project.groupId}:google-cloud-dns', 'com.google.api:gax-grpc', 'com.google.http-client:google-http-client-jackson2', '${project.groupId}:google-cloud-logging', 'com.google.cloud.datastore:datastore-v1-protos', 'com.google.auth:google-auth-library-credentials', 'com.google.http-client:google-http-client-jackson', 'com.google.cloud:google-cloud', '${project.groupId}:google-cloud-firestore', 'com.google.api:gax-httpjson', 'com.google.api-client:google-api-client', 'com.google.cloud:google-cloud-errorreporting', 'com.google.auth:google-auth-library-oauth2-http', '${project.groupId}:google-cloud-language', 'com.google.apis:google-api-services-compute', 'javax.inject:javax.inject', 'com.google.api.grpc:proto-google-cloud-bigquerydatatransfer-v1', 'com.google.api.grpc:proto-google-iam-v1', 'com.google.api.grpc:proto-google-cloud-bigtable-v2', '${project.groupId}:google-cloud-translate', 'io.grpc:grpc-protobuf', '${project.groupId}:google-cloud-dialogflow', '${project.groupId}:google-cloud-spanner', '${project.groupId}:google-cloud-bigtable', 'com.google.api.grpc:proto-google-common-protos', '${project.groupId}:google-cloud-storage', '${project.groupId}:google-cloud-trace', '${project.groupId}:google-cloud-pubsub', 'com.google.api.grpc:grpc-google-cloud-firestore-v1beta1', 'com.google.api.grpc:proto-google-cloud-container-v1', 'com.google.apis:google-api-services-bigquery', 'org.mockito:mockito-core', 'javax.servlet:javax.servlet-api', 'ch.qos.logback:logback-classic', '${project.groupId}:google-cloud-core-http', 'io.grpc:grpc-context', 'commons-fileupload:commons-fileupload', '${project.groupId}:google-cloud-examples', 'com.google.http-client:google-http-client', '${project.groupId}:google-cloud', 'com.google.api.grpc:proto-google-cloud-bigtable-admin-v2']
