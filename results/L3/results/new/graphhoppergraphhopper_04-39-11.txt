<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications. provide recommendations exclusively in the Maven format: groupId:artifactId:version.
    Given the project details below:
    Project Name: patloew/RxLocation
Project Description: The Reactive Location API Library for Android is now deprecated and not maintained anymore. Please switch to the CoLocation library by Micha\xc5\x82 Charmas. This library wraps the Location APIs in RxJava 2.x.
Existing Dependencies Include: org.powermock:powermock-module-junit4
- io.reactivex.rxjava2:rxandroid
- com.squareup.leakcanary:leakcanary-android
- io.reactivex.rxjava2:rxjava
- com.google.android.gms:play-services-location
- com.squareup.leakcanary:leakcanary-android-no-op

Project Name: frankred/jSona
Project Description: JSona is a configuration file(JSON), vcj and JavaFx based music and media player. The aim is to always keep your playlists in synch with your music folders. For fast fulltext search jSona uses Apache Lucene (http://lucene.apache.org/core/).
Existing Dependencies Include: uk.co.caprica:vlcj
- org.apache.lucene:lucene-analyzers-common
- org.apache.lucene:lucene-core
- commons-io:commons-io
- com.mpatric:mp3agic
- org.apache.lucene:lucene-queryparser
- com.github.tulskiy:jkeymaster
- org.apache.commons:commons-lang3

Project Name: querydsl/querydsl
Project Description: Querydsl is a framework which enables the construction of type-safe SQL-like queries for multiple backends including JPA, MongoDB and SQL in Java. Querying JPA and MongoDB using a fluent API.
Existing Dependencies Include: org.springframework:spring-aop
- com.mysema.codegen:codegen
- org.xerial:sqlite-jdbc
- org.springframework:spring-test
- com.google.guava:guava
- com.jolbox:bonecp
- org.hamcrest:hamcrest-library
- com.oracle:ojdbc6
- com.querydsl:querydsl-sql-spatial
- com.google.inject.extensions:guice-persist
- com.querydsl:querydsl-apt
- org.postgresql:postgresql
- org.easymock:easymock
- com.querydsl:querydsl-spatial
- org.hibernate:hibernate-ehcache
- javax.inject:javax.inject
- org.springframework:spring-context
- org.eclipse.persistence:eclipselink
- org.firebirdsql.jdbc:jaybird-jdk16
- log4j:log4j
- org.mongodb.morphia:morphia
- org.hsqldb:hsqldb
- cglib:cglib
- org.apache.lucene:lucene-queryparser
- org.hibernate.javax.persistence:hibernate-jpa-2.0-api
- org.apache.maven:maven-project
- org.hibernate:hibernate-envers
- com.querydsl:querydsl-codegen
- net.sourceforge.jtds:jtds
- org.springframework.roo:org.springframework.roo.annotations
- org.apache.ant:ant
- com.querydsl:querydsl-lucene3
- com.thoughtworks.proxytoys:proxytoys
- org.scala-lang:scala-library
- org.geolatte:geolatte-geom
- com.h2database:h2
- com.querydsl:querydsl-sql-codegen
- org.hibernate:hibernate-annotations
- org.scala-lang:scala-compiler
- org.reflections:reflections
- org.datanucleus:datanucleus-api-jdo
- org.mongodb:mongo-java-driver
- org.hibernate:hibernate-validator
- com.infradna.tool:bridge-method-annotation
- com.querydsl:querydsl-sql-spring
- javax.transaction:jta
- org.slf4j:slf4j-log4j12

Project Name: GoogleCloudPlatform/google-cloud-datastore
Project Description: This repository contains low-level Java and Python client libraries for Google Cloud Datastore. For more idiomatic and usable client libraries in these languages, please visit the [Google Cloud Dataastore Client for Java][java-datastore] and Google Cloud Database Client for Python
Existing Dependencies Include: com.google.http-client:com.google.http-client
- com.google.truth:com.google.truth
- com.google.cloud.datastore:datastore-v1-proto-client
- com.google.guava:com.google.guava
- com.google.api-client:com.google.api-client
- com.google.oauth-client:google-oauth-client
- com.google.truth:truth
- com.google.oauth-client:com.google.oauth-client

Project Name: eclipse/tycho
Project Description: Eclipse Tycho is a manifest-first way to build and build Eclipse plug-ins/OSGi bundles/RCP applications\nï¼Œnwith Maven. This repository contains all the features and documentation that will help you migrate to the official Eclipse site.
Existing Dependencies Include: org.apache.maven.plugin-tools:maven-plugin-annotations
- org.codehaus.plexus:plexus-component-annotations
- org.codehaus.plexus:plexus-container-default
- org.eclipse.tycho:tycho-testing-harness
- org.apache.maven:maven-core
- org.eclipse.tycho:org.eclipse.jdt.compiler.apt
- org.codehaus.plexus:plexus-utils
- org.eclipse.tycho:org.eclipse.osgi
- org.eclipse.tycho:tycho-core
- org.apache.commons:commons-exec
    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Reccomend me some of these libraries that can be added to the project to enhance its capabilities.
    Project Name: graphhopper/graphhopper
    Project Description: A fast and memory-efficient routing engine released under Apache License 2.0. It can be used as a Java library or standalone web server to calculate the distance, time, turn-by-turn instructions and many road attributes for a route between two or more points.
    Existing Dependencies:
    org.assertj:assertj-core
- com.google.transit:gtfs-realtime-bindings
- com.squareup.okhttp3:okhttp
- org.slf4j:slf4j-api
- com.graphhopper:graphhopper-reader-gtfs
- org.eclipse.jetty:jetty-server
- com.google.inject.extensions:guice-servlet
- org.openstreetmap.osmosis:osmosis-osm-binary
- org.mapsforge:vtm-jts
- com.graphhopper:directions-api-client-hc
- com.carrotsearch:hppc
- org.geotools:gt-shapefile
- org.eclipse.jetty:jetty-servlet
- com.graphhopper:graphhopper-reader-json
- org.mapsforge:vtm
- org.hamcrest:hamcrest-library
- com.vividsolutions:jts-core
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
     As an AI specializing in software library recommendations for Java applications, I would suggest the following five libraries to enhance the capabilities of the project "graphhopper/graphhopper":

1. com.graphhopper:graphhopper-reader-gtfs: This library provides a GTFS (General Transit Feed Specification) reader for GraphHopper, allowing for easier integration with public transportation data. By adding this library, the project can improve its ability to handle public transportation data and provide more accurate route planning results.

2. org.openstreetmap.osmosis:osmosis-osm-binary: This library provides a binary version of OpenStreetMap data, which can be used to improve the project's routing algorithm. By adding this library, the project can take advantage of the latest OpenStreetMap data and provide more accurate route planning results.

3. com.vividsolutions:jts-core: This library provides a Java implementation of the JTS (Java Topology Suite) spatial library, which can be used to improve the project's spatial functionality. By adding this library, the project can enhance its ability to handle spatial data and provide more accurate route planning results.

4. org.geotools:gt-shapefile: This library provides a Java library for working with shapefiles, which can be used to improve the project's ability to handle geospatial data. By adding this library, the project can enhance its ability to handle shapefiles and provide more accurate route planning results.

5. com.carrotsearch:hppc: This library provides a high-performance Java library for spatial algorithms, which can be used to improve the project's performance. By adding this library, the project can enhance its ability to handle large amounts of spatial data and provide faster route planning results.

In summary, these five libraries can help enhance the project's capabilities in handling public transportation data, spatial data, and geospatial data, leading to more accurate route planning results and improved performance.
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s> # Here is the list of libraries that can be added to the project:

1. com.graphhopper:graphhopper-core:2.3.0
2. com.graphhopper:graphhopper-routing:2.3.0
3. com.graphhopper:graphhopper-reader-gtfs:2.3.0
4. org.openstreetmap:osm-data- GB:1.0
5. org.geotools:geotools-referenced-impl:12.1.0
6. org.geotools:geotools-referenced-core:12.1.0
7. org.locationtech.jts:jts-core:1.13.1
8. org.locationtech.jts:jts-topology:1.13.1
9. org.opengis:referenced-systems:1.0
10. org.opengis:geometry-factory:1.0

Please note that the versions of the libraries may need to be adjusted based on the specific requirements of the project. It is also important to ensure that the libraries are compatible with the version of Java being used.

Precision: 0.2
Recall: 0.05555555555555555
F1 Score: 0.08695652173913045

Formatted Dependencies:
org.assertj:assertj-core
- com.google.transit:gtfs-realtime-bindings
- com.squareup.okhttp3:okhttp
- org.slf4j:slf4j-api
- com.graphhopper:graphhopper-reader-gtfs
- org.eclipse.jetty:jetty-server
- com.google.inject.extensions:guice-servlet
- org.openstreetmap.osmosis:osmosis-osm-binary
- org.mapsforge:vtm-jts
- com.graphhopper:directions-api-client-hc
- com.carrotsearch:hppc
- org.geotools:gt-shapefile
- org.eclipse.jetty:jetty-servlet
- com.graphhopper:graphhopper-reader-json
- org.mapsforge:vtm
- org.hamcrest:hamcrest-library
- com.vividsolutions:jts-core
 Test Dependencies:
['com.bedatadriven:jackson-datatype-jts', 'org.mapsforge:vtm-themes', 'com.caverock:androidsvg', 'com.google.android:android', 'com.fasterxml.jackson.core:jackson-databind', 'org.slf4j:slf4j-log4j12', 'com.fasterxml.jackson.core:jackson-annotations', 'org.apache.commons:commons-compress', 'com.google.inject:guice', 'org.slf4j:slf4j-android', 'com.conveyal:gtfs-lib', 'org.eclipse.jetty:jetty-servlets', 'log4j:log4j', 'com.graphhopper:graphhopper-core', 'org.mapsforge:vtm-android', 'com.graphhopper:graphhopper-reader-osm', 'org.apache.xmlgraphics:xmlgraphics-commons', 'junit:junit']
