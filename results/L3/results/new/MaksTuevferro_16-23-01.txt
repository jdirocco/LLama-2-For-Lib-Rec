<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications. provide recommendations exclusively in the Maven format: groupId:artifactId:version.
    Given the project details below:
    Project Name: patloew/RxLocation
Project Description: The Reactive Location API Library for Android is now deprecated and not maintained anymore. Please switch to the CoLocation library by Micha\xc5\x82 Charmas. This library wraps the Location APIs in RxJava 2.x.
Existing Dependencies Include: org.powermock:powermock-module-junit4
- io.reactivex.rxjava2:rxandroid
- com.squareup.leakcanary:leakcanary-android
- io.reactivex.rxjava2:rxjava
- com.google.android.gms:play-services-location
- com.squareup.leakcanary:leakcanary-android-no-op

Project Name: frankred/jSona
Project Description: JSona is a configuration file(JSON), vcj and JavaFx based music and media player. The aim is to always keep your playlists in synch with your music folders. For fast fulltext search jSona uses Apache Lucene (http://lucene.apache.org/core/).
Existing Dependencies Include: uk.co.caprica:vlcj
- org.apache.lucene:lucene-analyzers-common
- org.apache.lucene:lucene-core
- commons-io:commons-io
- com.mpatric:mp3agic
- org.apache.lucene:lucene-queryparser
- com.github.tulskiy:jkeymaster
- org.apache.commons:commons-lang3

Project Name: querydsl/querydsl
Project Description: Querydsl is a framework which enables the construction of type-safe SQL-like queries for multiple backends including JPA, MongoDB and SQL in Java. Querying JPA and MongoDB using a fluent API.
Existing Dependencies Include: org.springframework:spring-aop
- com.mysema.codegen:codegen
- org.xerial:sqlite-jdbc
- org.springframework:spring-test
- com.google.guava:guava
- com.jolbox:bonecp
- org.hamcrest:hamcrest-library
- com.oracle:ojdbc6
- com.querydsl:querydsl-sql-spatial
- com.google.inject.extensions:guice-persist
- com.querydsl:querydsl-apt
- org.postgresql:postgresql
- org.easymock:easymock
- com.querydsl:querydsl-spatial
- org.hibernate:hibernate-ehcache
- javax.inject:javax.inject
- org.springframework:spring-context
- org.eclipse.persistence:eclipselink
- org.firebirdsql.jdbc:jaybird-jdk16
- log4j:log4j
- org.mongodb.morphia:morphia
- org.hsqldb:hsqldb
- cglib:cglib
- org.apache.lucene:lucene-queryparser
- org.hibernate.javax.persistence:hibernate-jpa-2.0-api
- org.apache.maven:maven-project
- org.hibernate:hibernate-envers
- com.querydsl:querydsl-codegen
- net.sourceforge.jtds:jtds
- org.springframework.roo:org.springframework.roo.annotations
- org.apache.ant:ant
- com.querydsl:querydsl-lucene3
- com.thoughtworks.proxytoys:proxytoys
- org.scala-lang:scala-library
- org.geolatte:geolatte-geom
- com.h2database:h2
- com.querydsl:querydsl-sql-codegen
- org.hibernate:hibernate-annotations
- org.scala-lang:scala-compiler
- org.reflections:reflections
- org.datanucleus:datanucleus-api-jdo
- org.mongodb:mongo-java-driver
- org.hibernate:hibernate-validator
- com.infradna.tool:bridge-method-annotation
- com.querydsl:querydsl-sql-spring
- javax.transaction:jta
- org.slf4j:slf4j-log4j12

Project Name: GoogleCloudPlatform/google-cloud-datastore
Project Description: This repository contains low-level Java and Python client libraries for Google Cloud Datastore. For more idiomatic and usable client libraries in these languages, please visit the [Google Cloud Dataastore Client for Java][java-datastore] and Google Cloud Database Client for Python
Existing Dependencies Include: com.google.http-client:com.google.http-client
- com.google.truth:com.google.truth
- com.google.cloud.datastore:datastore-v1-proto-client
- com.google.guava:com.google.guava
- com.google.api-client:com.google.api-client
- com.google.oauth-client:google-oauth-client
- com.google.truth:truth
- com.google.oauth-client:com.google.oauth-client

Project Name: eclipse/tycho
Project Description: Eclipse Tycho is a manifest-first way to build and build Eclipse plug-ins/OSGi bundles/RCP applications\nï¼Œnwith Maven. This repository contains all the features and documentation that will help you migrate to the official Eclipse site.
Existing Dependencies Include: org.apache.maven.plugin-tools:maven-plugin-annotations
- org.codehaus.plexus:plexus-component-annotations
- org.codehaus.plexus:plexus-container-default
- org.eclipse.tycho:tycho-testing-harness
- org.apache.maven:maven-core
- org.eclipse.tycho:org.eclipse.jdt.compiler.apt
- org.codehaus.plexus:plexus-utils
- org.eclipse.tycho:org.eclipse.osgi
- org.eclipse.tycho:tycho-core
- org.apache.commons:commons-exec
    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Reccomend me some of these libraries that can be added to the project to enhance its capabilities.
    Project Name: MaksTuev/ferro
    Project Description: A simple and powerful MVP library for Android. It contains modules, which is used for developing Android projects by mobile studio Surf (https://surfstudio.ru/). Ferro evolved into modules `core-ui`, `Core-mvp`, `mvp-dialog`, mvp-widjet.
    Existing Dependencies:
    javax.inject:javax.inject
- javax.annotation:jsr250-api
- com.jakewharton.timber:timber
- com.android.support:recyclerview-v7
- com.annimon:stream
- com.android.support:appcompat-v7
- com.agna.ferro:ferro-mvp
- com.agna.ferro:ferro-mvp-rx
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
     As an AI specializing in software library recommendations for Java applications, I analyzed the provided project details and found the following five libraries that could enhance the capabilities of the project "MaksTuev/ferro":

1. com.google.dagger:dagger:2.10.2: The Dagger library is a powerful dependency injection framework that can help simplify the project's architecture, reduce coupling, and improve testing. It can be used to manage the project's dependencies and provide a more modular and maintainable codebase.

2. org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2: Coroutines are a powerful feature of Kotlin that allow for asynchronous programming in a much simpler way than traditional threads and locks. This library provides a set of coroutine libraries that can be used to improve the project's performance and responsiveness.

3. io.reactivex:rxjava2:2.2.5: RxJava is a popular reactive programming library that provides a more functional and declarative way of handling asynchronous operations. It can be used to simplify the project's codebase, reduce boilerplate code, and improve performance.

4. com.squareup.retrofit2:retrofit:2.6.1: Retrofit is a popular HTTP client library that provides a simple and intuitive API for making HTTP requests. It can be used to simplify the project's network communication code and provide a more robust and reliable API.

5. org.hamcrest:hamcrest-library:1.3: Hamcrest is a popular testing library that provides a set of matchers for testing the project's code. It can be used to improve the project's test coverage, reduce testing boilerplate code, and provide more meaningful test reports.

In conclusion, these five libraries can help enhance the project's capabilities, improve performance, and simplify the codebase. They are well-established and widely used in the Java community, and they can be easily integrated into the project's existing dependencies.
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s> # Here are the five libraries that can be added to the project to enhance its capabilities:

1. com.google.dagger:dagger:2.10.2
2. io.reactivex:rxjava2:2.2.5
3. com.squareup.retrofit2:retrofit:2.6.1
4. org.hamcrest:hamcrest-library:1.3
5. org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2

Precision: 0.2
Recall: 0.1111111111111111
F1 Score: 0.14285714285714285

Formatted Dependencies:
javax.inject:javax.inject
- javax.annotation:jsr250-api
- com.jakewharton.timber:timber
- com.android.support:recyclerview-v7
- com.annimon:stream
- com.android.support:appcompat-v7
- com.agna.ferro:ferro-mvp
- com.agna.ferro:ferro-mvp-rx
 Test Dependencies:
['com.agna.ferro:ferro-rx', 'com.google.dagger:dagger', 'com.android.support:cardview-v7', 'com.google.dagger:dagger-compiler', 'com.github.bumptech.glide:glide', 'com.agna.ferro:ferro-core', 'junit:junit', 'io.reactivex:rxjava', 'io.reactivex:rxandroid']
