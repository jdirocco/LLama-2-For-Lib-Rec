<s>[INST] <<SYS>> Given the recommendations for a Java project provided in the text below, please list these recommendations exclusively in the Maven format (groupId:artifactId:version). Ensure that the output consists solely of Maven dependencies, without additional explanations or content.
    Recommendations Text: <s>[INST] <<SYS>>
    As an AI specializing in software library recommendations for Java applications. provide recommendations exclusively in the Maven format: groupId:artifactId:version.
    Given the project details below:
    Project Name: patloew/RxLocation
Project Description: The Reactive Location API Library for Android is now deprecated and not maintained anymore. Please switch to the CoLocation library by Micha\xc5\x82 Charmas. This library wraps the Location APIs in RxJava 2.x.
Existing Dependencies Include: org.powermock:powermock-module-junit4
- io.reactivex.rxjava2:rxandroid
- com.squareup.leakcanary:leakcanary-android
- io.reactivex.rxjava2:rxjava
- com.google.android.gms:play-services-location
- com.squareup.leakcanary:leakcanary-android-no-op

Project Name: frankred/jSona
Project Description: JSona is a configuration file(JSON), vcj and JavaFx based music and media player. The aim is to always keep your playlists in synch with your music folders. For fast fulltext search jSona uses Apache Lucene (http://lucene.apache.org/core/).
Existing Dependencies Include: uk.co.caprica:vlcj
- org.apache.lucene:lucene-analyzers-common
- org.apache.lucene:lucene-core
- commons-io:commons-io
- com.mpatric:mp3agic
- org.apache.lucene:lucene-queryparser
- com.github.tulskiy:jkeymaster
- org.apache.commons:commons-lang3

Project Name: querydsl/querydsl
Project Description: Querydsl is a framework which enables the construction of type-safe SQL-like queries for multiple backends including JPA, MongoDB and SQL in Java. Querying JPA and MongoDB using a fluent API.
Existing Dependencies Include: org.springframework:spring-aop
- com.mysema.codegen:codegen
- org.xerial:sqlite-jdbc
- org.springframework:spring-test
- com.google.guava:guava
- com.jolbox:bonecp
- org.hamcrest:hamcrest-library
- com.oracle:ojdbc6
- com.querydsl:querydsl-sql-spatial
- com.google.inject.extensions:guice-persist
- com.querydsl:querydsl-apt
- org.postgresql:postgresql
- org.easymock:easymock
- com.querydsl:querydsl-spatial
- org.hibernate:hibernate-ehcache
- javax.inject:javax.inject
- org.springframework:spring-context
- org.eclipse.persistence:eclipselink
- org.firebirdsql.jdbc:jaybird-jdk16
- log4j:log4j
- org.mongodb.morphia:morphia
- org.hsqldb:hsqldb
- cglib:cglib
- org.apache.lucene:lucene-queryparser
- org.hibernate.javax.persistence:hibernate-jpa-2.0-api
- org.apache.maven:maven-project
- org.hibernate:hibernate-envers
- com.querydsl:querydsl-codegen
- net.sourceforge.jtds:jtds
- org.springframework.roo:org.springframework.roo.annotations
- org.apache.ant:ant
- com.querydsl:querydsl-lucene3
- com.thoughtworks.proxytoys:proxytoys
- org.scala-lang:scala-library
- org.geolatte:geolatte-geom
- com.h2database:h2
- com.querydsl:querydsl-sql-codegen
- org.hibernate:hibernate-annotations
- org.scala-lang:scala-compiler
- org.reflections:reflections
- org.datanucleus:datanucleus-api-jdo
- org.mongodb:mongo-java-driver
- org.hibernate:hibernate-validator
- com.infradna.tool:bridge-method-annotation
- com.querydsl:querydsl-sql-spring
- javax.transaction:jta
- org.slf4j:slf4j-log4j12

Project Name: GoogleCloudPlatform/google-cloud-datastore
Project Description: This repository contains low-level Java and Python client libraries for Google Cloud Datastore. For more idiomatic and usable client libraries in these languages, please visit the [Google Cloud Dataastore Client for Java][java-datastore] and Google Cloud Database Client for Python
Existing Dependencies Include: com.google.http-client:com.google.http-client
- com.google.truth:com.google.truth
- com.google.cloud.datastore:datastore-v1-proto-client
- com.google.guava:com.google.guava
- com.google.api-client:com.google.api-client
- com.google.oauth-client:google-oauth-client
- com.google.truth:truth
- com.google.oauth-client:com.google.oauth-client

Project Name: eclipse/tycho
Project Description: Eclipse Tycho is a manifest-first way to build and build Eclipse plug-ins/OSGi bundles/RCP applications\nï¼Œnwith Maven. This repository contains all the features and documentation that will help you migrate to the official Eclipse site.
Existing Dependencies Include: org.apache.maven.plugin-tools:maven-plugin-annotations
- org.codehaus.plexus:plexus-component-annotations
- org.codehaus.plexus:plexus-container-default
- org.eclipse.tycho:tycho-testing-harness
- org.apache.maven:maven-core
- org.eclipse.tycho:org.eclipse.jdt.compiler.apt
- org.codehaus.plexus:plexus-utils
- org.eclipse.tycho:org.eclipse.osgi
- org.eclipse.tycho:tycho-core
- org.apache.commons:commons-exec
    Your tasks are to:
    - Provide recommendations exclusively in the Maven format as shown in the example.
    - Ensure recommendations are suitable for the project context described. Focus solely on suggesting libraries that could enhance the project's capabilities or performance.
    - Consider the project's context and existing dependencies to suggest libraries that complement or enhance the current setup.
    - Ignore any code dont write any code.
    <</SYS>>
    Reccomend me some of these libraries that can be added to the project to enhance its capabilities.
    Project Name: locationtech/jts
    Project Description: JTS Topology Suite is a Java library for creating and manipulating vector geometry.  It also provides a comprehensive set of geometry test cases, and the TestBuilder GUI application for working with and visualizing geometry and JTS functions.
    Existing Dependencies:
    com.esri:jpe_sdk
- com.oracle:ojdbc7
- org.locationtech.jts.io:jts-io-common
- org.jdom:jdom2
- com.googlecode.json-simple:json-simple
    Focus on suggesting libraries that enhance the project's capabilities, improve performance, or introduce new functionalities relevant to the project's needs. Provide a brief explanation for each recommended library, highlighting how it benefits the project. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s>
     Based on the project descriptions, I recommend the following five libraries to enhance the capabilities of the projects:

1. org.locationtech.jts:jts-core - This library provides a comprehensive set of algorithms for geometric computations, such as spatial relationships, intersection, and proximity. It can enhance the project's capabilities in geometry and spatial analysis, especially for projects that involve mapping or location-based services.

2. com.google.guava:guava - This library provides a set of utilities for common data structures and algorithms, such as lists, sets, maps, and sorting. It can improve the project's performance by providing efficient and concise implementations of these common functionalities.

3. org.apache.lucene:lucene-core - This library is a high-performance search engine library that provides a flexible and scalable solution for full-text search and indexing. It can enhance the project's capabilities in search and indexing, especially for projects that involve large amounts of text data.

4. com.querydsl:querydsl-sql-spring - This library provides a fluent API for constructing SQL queries and mapping them to Java objects. It can simplify and improve the project's data access and querying capabilities, especially for projects that involve complex database operations.

5. org.springframework:spring-web - This library provides a comprehensive set of web-related functionalities, such as web controllers, web services, and RESTful APIs. It can enhance the project's web development capabilities and provide a more robust and scalable web application.

In conclusion, these five libraries can enhance the capabilities of the projects by providing efficient and scalable solutions for geometry and spatial analysis, data structures and algorithms, search and indexing, data access and querying, and web development.
    Please ignore any code snippets or examples and focus solely on extracting the Maven dependencies from the text.
    Please format the response as a list of Maven dependencies, each on a new line.
    <</SYS>>
    Recommendations must be in the Maven format and focus on enhancing the project's capabilities or addressing any identified needs. Provide recommendations exclusively in the Maven format. Reccomend me 5 libraries that can be added to the project to enhance its capabilities.
    [/INST]</s> # Maven Dependencies for the Project

The following are the Maven dependencies required for the project:

1. org.locationtech.jts:jts-core:1.14.0
2. com.google.guava:guava:28.1-jre
3. com.google.code.findbugs:jsr305:3.0.2
4. org.apache.lucene:lucene-core:8.6.2
5. org.apache.lucene:lucene-analyzers-icu:8.6.2
6. org.apache.lucene:lucene-queryparser:8.6.2
7. org.apache.lucene:lucene-highlighter:8.6.2
8. org.springframework:spring-web:5.3.10
9. org.springframework:spring-data-jpa:2.3.10
10. org.springframework:spring-tx:5.3.10
11. org.hibernate:hibernate-core:5.4.32.Final
12. org.hibernate:hibernate-entitymanager:5.4.32.Final
13. org.jboss.logging:jboss-logging:3.4.0.Final
14. org.jboss.arquillian:arquillian-core:1.2.1.Final
15. org.jboss.arquillian:arquillian-junit:1.2.1.Final
16. org.jboss.arquillian:arquillian-resource:1.2.1.Final
17. org.jboss.arquillian:arquillian-test-suite-common:1.2.1.Final
18. com.github.springtestdbunit:spring-test-dbunit:3.2.3.RELEASE
19. org.skyscreamer:json-assert:1.7.0
20. org.slf4j:slf4j-api:1.8.0-beta4

Please note that the versions of the dependencies may vary based on the specific requirements of your project.

Precision: 0.2
Recall: 0.2
F1 Score: 0.20000000000000004

Formatted Dependencies:
com.esri:jpe_sdk
- com.oracle:ojdbc7
- org.locationtech.jts.io:jts-io-common
- org.jdom:jdom2
- com.googlecode.json-simple:json-simple
 Test Dependencies:
['org.locationtech.jts:jts-tests', 'org.apache.commons:commons-lang3', 'com.esri:jsde_sdk', 'junit:junit', 'org.locationtech.jts:jts-core']
